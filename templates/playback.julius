// Generated by psc version 0.6.9.5
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function numDiv(n1) {
      return function(n2) {
        return n1 / n2;
      };
    }
    ;
    
    function numMod(n1) {
      return function(n2) {
        return n1 % n2;
      };
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function numShl(n1) {
      return function(n2) {
        return n1 << n2;
      };
    }
    ;
    
    function numShr(n1) {
      return function(n2) {
        return n1 >> n2;
      };
    }
    ;
    
    function numZshr(n1) {
      return function(n2) {
        return n1 >>> n2;
      };
    }
    ;
    
    function numAnd(n1) {
      return function(n2) {
        return n1 & n2;
      };
    }
    ;
    
    function numOr(n1) {
      return function(n2) {
        return n1 | n2;
      };
    }
    ;
    
    function numXor(n1) {
      return function(n2) {
        return n1 ^ n2;
      };
    }
    ;
    
    function numComplement(n) {
      return ~n;
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Semiring = function ($times, $plus, one, zero) {
        this["*"] = $times;
        this["+"] = $plus;
        this.one = one;
        this.zero = zero;
    };
    var ModuloSemiring = function ($div, __superclass_Prelude$dotSemiring_0, mod) {
        this["/"] = $div;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
        this.mod = mod;
    };
    var Ring = function ($minus, __superclass_Prelude$dotSemiring_0) {
        this["-"] = $minus;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var Bits = function ($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $percent = numMod;
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var semiringNumber = new Semiring(numMul, numAdd, 1, 0);
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var ringNumber = new Ring(numSub, function () {
        return semiringNumber;
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var moduloSemiringNumber = new ModuloSemiring(numDiv, function () {
        return semiringNumber;
    }, function (_86) {
        return function (_87) {
            return 0;
        };
    });
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _669 = compare(__dict_Ord_12)(a1)(a2);
                if (_669 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_15) {
        return function (a1) {
            return function (a2) {
                var _670 = compare(__dict_Ord_15)(a1)(a2);
                if (_670 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_16)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Ring: Ring, 
        ModuloSemiring: ModuloSemiring, 
        Semiring: Semiring, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "<>": $less$greater, 
        "||": $bar$bar, 
        complement: complement, 
        ">=": $greater$eq, 
        "<": $less, 
        compare: compare, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        "%": $percent, 
        "-": $minus, 
        "/": $div, 
        "*": $times, 
        "+": $plus, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "<$>": $less$dollar$greater, 
        cons: cons, 
        ":": $colon, 
        "$": $dollar, 
        "<<<": $less$less$less, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        semiringNumber: semiringNumber, 
        ringNumber: ringNumber, 
        moduloSemiringNumber: moduloSemiringNumber, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        ordNumber: ordNumber, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function unsafeIndex(xs) {
      return function(n) {
        return xs[n];
      };
    }
    ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Data_Time = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Int = PS.Data_Int;
    var Milliseconds = function (x) {
        return x;
    };
    var semiringMilliseconds = new Prelude.Semiring(function (_195) {
        return function (_196) {
            return _195 * _196;
        };
    }, function (_193) {
        return function (_194) {
            return _193 + _194;
        };
    }, 1, 0);
    var ringMilliseconds = new Prelude.Ring(function (_197) {
        return function (_198) {
            return _197 - _198;
        };
    }, function () {
        return semiringMilliseconds;
    });
    var eqMilliseconds = new Prelude.Eq(function (_189) {
        return function (_190) {
            return _189 !== _190;
        };
    }, function (_187) {
        return function (_188) {
            return _187 === _188;
        };
    });
    var ordMilliseconds = new Prelude.Ord(function () {
        return eqMilliseconds;
    }, function (_191) {
        return function (_192) {
            return Prelude.compare(Prelude.ordNumber)(_191)(_192);
        };
    });
    return {
        Milliseconds: Milliseconds, 
        eqMilliseconds: eqMilliseconds, 
        ordMilliseconds: ordMilliseconds, 
        semiringMilliseconds: semiringMilliseconds, 
        ringMilliseconds: ringMilliseconds
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function runFn2(fn) {
      return function(a) {
        return function(b) {
          return fn(a, b);
        };
      };
    }
    ;
    
    function runFn3(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return fn(a, b, c);
          };
        };
      };
    }
    ;
    
    function runFn4(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return fn(a, b, c, d);
            };
          };
        };
      };
    }
    ;
    return {
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Ref = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function newRef(val) {
    return function () {
      return { value: val };
    };
  }
;
    
  function readRef(ref) {
    return function() {
      return ref.value;
    };
  }
;
    
  function writeRef(ref) {
    return function(val) {
      return function() {
        ref.value = val;
        return {};
      };
    };
  }
;
    return {
        writeRef: writeRef, 
        readRef: readRef, 
        newRef: newRef
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Document = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    
  function unsafeTitle(src) {
    return function () {
      return src.title;
    };
  };
    
  function unsafeSetTitle(value) {
    return function (src) {
      return function () {
        src.title = value;
      };
    };
  };
    
  function unsafeBody(src) {
    return function () {
      return src.body;
    };
  };
    
  function unsafeSetBody(value) {
    return function (src) {
      return function () {
        src.body = value;
      };
    };
  };
    return {
        unsafeSetBody: unsafeSetBody, 
        unsafeBody: unsafeBody, 
        unsafeSetTitle: unsafeSetTitle, 
        unsafeTitle: unsafeTitle
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Element = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    
  function unsafeGetElementById(targ_id) {
    return function (src) {
      return function () {
        return src.getElementById(targ_id);
      };
    };
  };
    
  function unsafeGetElementsByClassName(targ_id) {
    return function (src) {
      return function () {
        return src.getElementsByClassName(targ_id);
      };
    };
  };
    
  function unsafeGetElementsByName(targ_id) {
    return function (src) {
      return function () {
        return src.getElementsByName(targ_id);
      };
    };
  };
    
  function unsafeQuerySelector(selector) {
    return function (src) {
      return function () {
        return src.querySelector(selector);
      };
    };
  };
    
  function unsafeQuerySelectorAll(selector) {
    return function (src) {
      return function () {
        return src.querySelectorAll(selector);
      };
    };
  };
    
  function unsafeGetAttribute(name) {
    return function (src) {
      return function () {
        return src.getAttribute(name);
      };
    };
  };
    
  function unsafeSetAttribute(name) {
    return function (value) {
      return function (src) {
        return function () {
          src.setAttribute(name, value);
          return {};
        };
      };
    };
  };
    
  function unsafeHasAttribute(name) {
    return function (src) {
      return function () {
        return src.hasAttribute(name);
      };
    };
  };
    
  function unsafeRemoveAttribute(name) {
    return function (src) {
      return function () {
        src.removeAttribute(name);
        return {};
      };
    };
  };
    
  function unsafeGetStyleAttr(name) {
    return function (src) {
      return function () {
        return src.style[name];
      };
    };
  };
    
  function unsafeSetStyleAttr(name) {
    return function (value) {
      return function (src) {
        return function () {
          src.style[name] = value;
          return {};
        };
      };
    };
  };
    
  function unsafeChildren(src) {
    return function () {
      return src.children;
    };
  };
    
  function unsafeAppendChild(src) {
    return function (child) {
      return function () {
        return src.appendChild(child);
      };
    };
  };
    
  function unsafeInnerHTML(src) {
    return function () {
      return src.innerHTML;
    };
  };
    
  function unsafeSetInnerHTML(value) {
    return function (src) {
      return function () {
        src.innerHTML = value;
        return {};
      };
    };
  };
    
  function unsafeTextContent(src) {
    return function () {
      return src.textContent;
    };
  };
    
  function unsafeSetTextContent(value) {
    return function (src) {
      return function () {
        src.textContent = value;
        return {};
      };
    };
  };
    
  function unsafeValue(src) {
    return function () {
      return src.value;
    };
  };
    
  function unsafeSetValue(value) {
    return function (src) {
      return function () {
        src.value = value;
        return {};
      };
    };
  };
    
  function unsafeContentWindow(obj) {
    return function () {
      return obj.contentWindow;
    };
  };
    
  function unsafeClassAdd(value) {
    return function (src) {
      return function () {
        src.classList.add(value);
        return {};
      };
    };
  };
    
  function unsafeClassRemove(value) {
    return function (src) {
      return function () {
        src.classList.remove(value);
        return {};
      };
    };
  };
    
  function unsafeClassToggle(value) {
    return function (src) {
      return function () {
        src.classList.toggle(value);
        return {};
      };
    };
  };
    
  function unsafeClassContains(value) {
    return function (src) {
      return function () {
        return src.classList.contains(value);
      };
    };
  };
    return {
        unsafeClassContains: unsafeClassContains, 
        unsafeClassToggle: unsafeClassToggle, 
        unsafeClassRemove: unsafeClassRemove, 
        unsafeClassAdd: unsafeClassAdd, 
        unsafeContentWindow: unsafeContentWindow, 
        unsafeSetValue: unsafeSetValue, 
        unsafeValue: unsafeValue, 
        unsafeSetTextContent: unsafeSetTextContent, 
        unsafeTextContent: unsafeTextContent, 
        unsafeSetInnerHTML: unsafeSetInnerHTML, 
        unsafeInnerHTML: unsafeInnerHTML, 
        unsafeAppendChild: unsafeAppendChild, 
        unsafeChildren: unsafeChildren, 
        unsafeSetStyleAttr: unsafeSetStyleAttr, 
        unsafeGetStyleAttr: unsafeGetStyleAttr, 
        unsafeRemoveAttribute: unsafeRemoveAttribute, 
        unsafeHasAttribute: unsafeHasAttribute, 
        unsafeSetAttribute: unsafeSetAttribute, 
        unsafeGetAttribute: unsafeGetAttribute, 
        unsafeQuerySelectorAll: unsafeQuerySelectorAll, 
        unsafeQuerySelector: unsafeQuerySelector, 
        unsafeGetElementsByName: unsafeGetElementsByName, 
        unsafeGetElementsByClassName: unsafeGetElementsByClassName, 
        unsafeGetElementById: unsafeGetElementById
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Window = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    
  function unsafeDocument(win) {
    return function () {
      return win.document;
    };
  };
    
  function unsafeNavigator(win) {
    return function () {
      return win.navigator;
    };
  };
    
  function unsafeLocation(win) {
    return function () {
      return win.location;
    };
  };
    
  function unsafeSetTimeout(win) {
    return function(delay) {
      return function(func) {
        return function() {
          return win.setTimeout(func, delay);
        };
      };
    };
  };
    
  function unsafeSetInterval(win) {
    return function(delay) {
      return function(func) {
        return function() {
          return win.setInterval(func, delay);
        };
      };
    };
  };
    
  function unsafeClearTimeout(win) {
    return function(timeout) {
      return function() {
        win.clearTimeout(timeout);
      };
    };
  };
    
  function unsafeInnerWidth(win) {
    return function() {
      return win.innerWidth;
    };
  };
    
  function unsafeInnerHeight(win) {
    return function() {
      return win.innerHeight;
    };
  };
    return {
        unsafeInnerHeight: unsafeInnerHeight, 
        unsafeInnerWidth: unsafeInnerWidth, 
        unsafeClearTimeout: unsafeClearTimeout, 
        unsafeSetInterval: unsafeSetInterval, 
        unsafeSetTimeout: unsafeSetTimeout, 
        unsafeLocation: unsafeLocation, 
        unsafeNavigator: unsafeNavigator, 
        unsafeDocument: unsafeDocument
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function trace(s) {
      return function() {
        console.log(s);
        return {};
      };
    }
    ;
    return {
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Extend = PS.Control_Extend;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var functorEither = new Prelude.Functor(function (f) {
        return function (_249) {
            if (_249 instanceof Left) {
                return new Left(_249.value0);
            };
            if (_249 instanceof Right) {
                return new Right(f(_249.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var either = function (f) {
        return function (g) {
            return function (_248) {
                if (_248 instanceof Left) {
                    return f(_248.value0);
                };
                if (_248 instanceof Right) {
                    return g(_248.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var applyEither = new Prelude.Apply(function (_250) {
        return function (r) {
            if (_250 instanceof Left) {
                return new Left(_250.value0);
            };
            if (_250 instanceof Right) {
                return Prelude["<$>"](functorEither)(_250.value0)(r);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_247) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_251) {
        return function (r) {
            if (_251 instanceof Left) {
                return r;
            };
            return _251;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    return {
        Nothing: Nothing, 
        Just: Just
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            var _702 = n < 0 || (n >= length(xs) || isInt(n));
            if (_702) {
                return Data_Maybe.Nothing.value;
            };
            if (!_702) {
                return new Data_Maybe.Just(xs[n]);
            };
            throw new Error("Failed pattern match");
        };
    };
    var functorArray = new Prelude.Functor(map);
    return {
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        length: length, 
        map: map, 
        snoc: snoc, 
        "!!": $bang$bang, 
        functorArray: functorArray
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Array = PS.Data_Array;
    var Data_Either = PS.Data_Either;
    
  function parseJSONImpl(left, right, str) {
    try {
      return right(JSON.parse(str));
    } catch (e) {
      return left(e.toString());
    }
  }
  ;
    
  function unsafeFromForeign(value) {
    return value;
  }
  ;
    
  function typeOf(value) {
    return typeof value;
  }
  ;
    
  function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  }
  ;
    
  function isNull(value) {
    return value === null;
  }
  ;
    
  function isUndefined(value) {
    return value === undefined;
  }
  ;
    
  var isArray = Array.isArray || function(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  };
  ;
    var TypeMismatch = (function () {
        function TypeMismatch(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeMismatch.create = function (value0) {
            return function (value1) {
                return new TypeMismatch(value0, value1);
            };
        };
        return TypeMismatch;
    })();
    var ErrorAtIndex = (function () {
        function ErrorAtIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtIndex.create = function (value0) {
            return function (value1) {
                return new ErrorAtIndex(value0, value1);
            };
        };
        return ErrorAtIndex;
    })();
    var ErrorAtProperty = (function () {
        function ErrorAtProperty(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtProperty.create = function (value0) {
            return function (value1) {
                return new ErrorAtProperty(value0, value1);
            };
        };
        return ErrorAtProperty;
    })();
    var JSONError = (function () {
        function JSONError(value0) {
            this.value0 = value0;
        };
        JSONError.create = function (value0) {
            return new JSONError(value0);
        };
        return JSONError;
    })();
    var unsafeReadTagged = function (tag) {
        return function (value) {
            if (tagOf(value) === tag) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(value));
            };
            return new Data_Either.Left(new TypeMismatch(tag, tagOf(value)));
        };
    };
    var readString = unsafeReadTagged("String");
    var readNumber = unsafeReadTagged("Number");
    var readArray = function (value) {
        if (isArray(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(value));
        };
        return new Data_Either.Left(new TypeMismatch("array", tagOf(value)));
    };
    var parseJSON = function (json) {
        return parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
    };
    return {
        TypeMismatch: TypeMismatch, 
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        readArray: readArray, 
        readNumber: readNumber, 
        readString: readString, 
        isArray: isArray, 
        isUndefined: isUndefined, 
        isNull: isNull, 
        tagOf: tagOf, 
        typeOf: typeOf, 
        unsafeReadTagged: unsafeReadTagged, 
        unsafeFromForeign: unsafeFromForeign, 
        parseJSON: parseJSON
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    
  function unsafeReadPropImpl(f, s, key, value) {
    return value == null ? f : s(value[key]);
  }
  ;
    
  function unsafeHasOwnProperty(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  }
  ;
    
  function unsafeHasProperty(prop, value) {
    return prop in value;
  }
  ;
    var Index = function ($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
        };
    };
    var prop = unsafeReadProp;
    var hasPropertyImpl = function (prop_1) {
        return function (value) {
            if (Data_Foreign.isNull(value)) {
                return false;
            };
            if (Data_Foreign.isUndefined(value)) {
                return false;
            };
            if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
                return unsafeHasProperty(prop_1, value);
            };
            return false;
        };
    };
    var hasOwnPropertyImpl = function (prop_1) {
        return function (value) {
            if (Data_Foreign.isNull(value)) {
                return false;
            };
            if (Data_Foreign.isUndefined(value)) {
                return false;
            };
            if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
                return unsafeHasOwnProperty(prop_1, value);
            };
            return false;
        };
    };
    var indexString = new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        Index: Index, 
        errorAt: errorAt, 
        "!": $bang, 
        prop: prop, 
        indexString: indexString
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Utils = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function ensure3(nothing) {
    return function(just) {
      return function(v) {
        if (v === undefined || v === null) {
          return nothing;
        } else {
          return just(v);
        }
      };
   };
  };
    var ensure = ensure3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    return {
        ensure: ensure, 
        ensure3: ensure3
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        mempty: mempty
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var snd = function (_371) {
        return _371.value1;
    };
    return {
        Tuple: Tuple, 
        zip: zip, 
        snd: snd
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  }
  ;
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  }
  ;
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var foldableArray = new Foldable(function (__dict_Monoid_292) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_292["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_292))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Element = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_DOM_Simple_Unsafe_Element = PS.Data_DOM_Simple_Unsafe_Element;
    var Data_DOM_Simple_Unsafe_Utils = PS.Data_DOM_Simple_Unsafe_Utils;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var DOM = PS.DOM;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Element = function (appendChild, children, classAdd, classContains, classRemove, classToggle, contentWindow, getAttribute, getElementById, getElementsByClassName, getElementsByName, getStyleAttr, hasAttribute, innerHTML, querySelector, querySelectorAll, removeAttribute, setAttribute, setInnerHTML, setStyleAttr, setTextContent, setValue, textContent, value) {
        this.appendChild = appendChild;
        this.children = children;
        this.classAdd = classAdd;
        this.classContains = classContains;
        this.classRemove = classRemove;
        this.classToggle = classToggle;
        this.contentWindow = contentWindow;
        this.getAttribute = getAttribute;
        this.getElementById = getElementById;
        this.getElementsByClassName = getElementsByClassName;
        this.getElementsByName = getElementsByName;
        this.getStyleAttr = getStyleAttr;
        this.hasAttribute = hasAttribute;
        this.innerHTML = innerHTML;
        this.querySelector = querySelector;
        this.querySelectorAll = querySelectorAll;
        this.removeAttribute = removeAttribute;
        this.setAttribute = setAttribute;
        this.setInnerHTML = setInnerHTML;
        this.setStyleAttr = setStyleAttr;
        this.setTextContent = setTextContent;
        this.setValue = setValue;
        this.textContent = textContent;
        this.value = value;
    };
    var getElementById = function (dict) {
        return dict.getElementById;
    };
    return {
        Element: Element, 
        getElementById: getElementById
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Document = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_DOM_Simple_Unsafe_Element = PS.Data_DOM_Simple_Unsafe_Element;
    var Data_DOM_Simple_Unsafe_Utils = PS.Data_DOM_Simple_Unsafe_Utils;
    var Data_DOM_Simple_Unsafe_Document = PS.Data_DOM_Simple_Unsafe_Document;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    var Document = function (body, setBody, setTitle, title) {
        this.body = body;
        this.setBody = setBody;
        this.setTitle = setTitle;
        this.title = title;
    };
    var htmlDocumentElement = new Data_DOM_Simple_Element.Element(Data_DOM_Simple_Unsafe_Element.unsafeAppendChild, Data_DOM_Simple_Unsafe_Element.unsafeChildren, Data_DOM_Simple_Unsafe_Element.unsafeClassAdd, Data_DOM_Simple_Unsafe_Element.unsafeClassContains, Data_DOM_Simple_Unsafe_Element.unsafeClassRemove, Data_DOM_Simple_Unsafe_Element.unsafeClassToggle, Data_DOM_Simple_Unsafe_Element.unsafeContentWindow, Data_DOM_Simple_Unsafe_Element.unsafeGetAttribute, function (id) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeGetElementById(id)(el))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Control_Monad_Eff.monadEff))(Data_DOM_Simple_Unsafe_Utils.ensure));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByClassName, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByName, Data_DOM_Simple_Unsafe_Element.unsafeGetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeHasAttribute, Data_DOM_Simple_Unsafe_Element.unsafeInnerHTML, function (sel) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeQuerySelector(sel)(el))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Control_Monad_Eff.monadEff))(Data_DOM_Simple_Unsafe_Utils.ensure));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeQuerySelectorAll, Data_DOM_Simple_Unsafe_Element.unsafeRemoveAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeSetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeSetTextContent, Data_DOM_Simple_Unsafe_Element.unsafeSetValue, Data_DOM_Simple_Unsafe_Element.unsafeTextContent, Data_DOM_Simple_Unsafe_Element.unsafeValue);
    var htmlDocument = new Document(Data_DOM_Simple_Unsafe_Document.unsafeBody, Data_DOM_Simple_Unsafe_Document.unsafeSetBody, Data_DOM_Simple_Unsafe_Document.unsafeSetTitle, Data_DOM_Simple_Unsafe_Document.unsafeTitle);
    var body = function (dict) {
        return dict.body;
    };
    return {
        Document: Document, 
        body: body, 
        htmlDocumentElement: htmlDocumentElement, 
        htmlDocument: htmlDocument
    };
})();
var PS = PS || {};
PS.Dims = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var DOM = PS.DOM;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    function getClientWidth(htmlelt){  return function(){    return htmlelt.clientWidth;  };};;
    function getOffsetHeight(htmlelt){  return function(){    return htmlelt.offsetHeight;  };};;
    return {
        getOffsetHeight: getOffsetHeight, 
        getClientWidth: getClientWidth
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Maybe = PS.Data_Maybe;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    return {
        replace: replace
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Window = (function () {
    "use strict";
    var Data_DOM_Simple_Unsafe_Window = PS.Data_DOM_Simple_Unsafe_Window;
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_Maybe = PS.Data_Maybe;
    var globalWindow = window;;
    var Window = function (clearTimeout, document, innerHeight, innerWidth, location, navigator, setInterval, setTimeout) {
        this.clearTimeout = clearTimeout;
        this.document = document;
        this.innerHeight = innerHeight;
        this.innerWidth = innerWidth;
        this.location = location;
        this.navigator = navigator;
        this.setInterval = setInterval;
        this.setTimeout = setTimeout;
    };
    var setInterval = function (dict) {
        return dict.setInterval;
    };
    var innerWidth = function (dict) {
        return dict.innerWidth;
    };
    var innerHeight = function (dict) {
        return dict.innerHeight;
    };
    var htmlWindow = new Window(Data_DOM_Simple_Unsafe_Window.unsafeClearTimeout, Data_DOM_Simple_Unsafe_Window.unsafeDocument, Data_DOM_Simple_Unsafe_Window.unsafeInnerHeight, Data_DOM_Simple_Unsafe_Window.unsafeInnerWidth, Data_DOM_Simple_Unsafe_Window.unsafeLocation, Data_DOM_Simple_Unsafe_Window.unsafeNavigator, Data_DOM_Simple_Unsafe_Window.unsafeSetInterval, Data_DOM_Simple_Unsafe_Window.unsafeSetTimeout);
    var document = function (dict) {
        return dict.document;
    };
    return {
        Window: Window, 
        globalWindow: globalWindow, 
        innerHeight: innerHeight, 
        innerWidth: innerWidth, 
        setInterval: setInterval, 
        document: document, 
        htmlWindow: htmlWindow
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_340) {
        return function (_504) {
            if (_504.length === 0) {
                return Prelude.pure(__dict_Applicative_340)([  ]);
            };
            if (_504.length >= 1) {
                var _715 = _504.slice(1);
                return Prelude["<*>"](__dict_Applicative_340["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_340["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_504[0]))(sequence(traversableArray)(__dict_Applicative_340)(_715));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_339) {
        return function (f) {
            return function (_503) {
                if (_503.length === 0) {
                    return Prelude.pure(__dict_Applicative_339)([  ]);
                };
                if (_503.length >= 1) {
                    var _719 = _503.slice(1);
                    return Prelude["<*>"](__dict_Applicative_339["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_339["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(f(_503[0])))(traverse(traversableArray)(__dict_Applicative_339)(f)(_719));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    return {
        Traversable: Traversable, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var IsForeign = function (read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    var readJSON = function (__dict_IsForeign_352) {
        return function (json) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_352));
        };
    };
    var readWith = function (__dict_IsForeign_353) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_353)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_354) {
        return function (__dict_Index_355) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_355)(value)(prop))(readWith(__dict_IsForeign_354)(Data_Foreign_Index.errorAt(__dict_Index_355)(prop)));
                };
            };
        };
    };
    var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
    var arrayIsForeign = function (__dict_IsForeign_359) {
        return new IsForeign(function (value) {
            var readElement = function (i) {
                return function (value_1) {
                    return readWith(__dict_IsForeign_359)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
                };
            };
            var readElements = function (arr) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
            };
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
        });
    };
    return {
        IsForeign: IsForeign, 
        readProp: readProp, 
        readWith: readWith, 
        readJSON: readJSON, 
        read: read, 
        stringIsForeign: stringIsForeign, 
        numberIsForeign: numberIsForeign, 
        arrayIsForeign: arrayIsForeign
    };
})();
var PS = PS || {};
PS.Data_Date = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Global = PS.Global;
    var Data_Function = PS.Data_Function;
    var Data_Enum = PS.Data_Enum;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Int = PS.Data_Int;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Time = PS.Data_Time;
    
  function nowEpochMilliseconds() {
    return Date.now();
  }
  ;
    return {
        nowEpochMilliseconds: nowEpochMilliseconds
    };
})();
var PS = PS || {};
PS.Graphics_Canvas = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function getCanvasElementByIdImpl(id, Just, Nothing) {
    return function() {
      var el = document.getElementById(id);
      if (el && el instanceof HTMLCanvasElement) {
        return Just(el);
      } else {
        return Nothing;
      }
    };
  };
    function getContext2D(c) {  return function() {    return c.getContext('2d');  };};
    function getCanvasWidth(canvas){  return function(){    return canvas.width;  };};;
    function getCanvasHeight(canvas){  return function(){    return canvas.height;  };};;
    function setCanvasWidth(width){   return function(canvas){      return function(){        canvas.width = width;        return canvas;      };    };};;
    function setCanvasHeight(height){   return function(canvas){      return function(){         canvas.height = height;         return canvas;       };    };};;
    function setFillStyle(style) {  return function(ctx) {    return function() {      ctx.fillStyle = style;      return ctx;    };  };};
    function beginPath(ctx) {  return function() {    ctx.beginPath();    return ctx;  };};
    function fill(ctx) {  return function() {    ctx.fill();    return ctx;  };};
    function clip(ctx) {  return function() {    ctx.clip();    return ctx;  };};
    function rect(ctx) {  return function(r) {    return function() {      ctx.rect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function clearRect(ctx) {  return function(r) {    return function() {      ctx.clearRect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function strokeText(ctx) {  return function(text) {    return function(x) {      return function(y) {        return function() {          ctx.strokeText(text, x, y);          return ctx;        };      };    };  };};
    function save(ctx) {  return function() {    ctx.save();    return ctx;  };};
    function restore(ctx) {  return function() {    ctx.restore();    return ctx;  };};
    var setCanvasDimensions = function (d) {
        return function (ce) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(setCanvasHeight(d.height)(ce))(setCanvasWidth(d.width));
        };
    };
    var getCanvasElementById = function (elId) {
        return getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
    var getCanvasDimensions = function (ce) {
        return function __do() {
            var _49 = getCanvasWidth(ce)();
            var _48 = getCanvasHeight(ce)();
            return {
                width: _49, 
                height: _48
            };
        };
    };
    var fillPath = function (ctx) {
        return function (path) {
            return function __do() {
                beginPath(ctx)();
                var _51 = path();
                fill(ctx)();
                return _51;
            };
        };
    };
    return {
        restore: restore, 
        save: save, 
        strokeText: strokeText, 
        clearRect: clearRect, 
        rect: rect, 
        fillPath: fillPath, 
        clip: clip, 
        fill: fill, 
        beginPath: beginPath, 
        setFillStyle: setFillStyle, 
        setCanvasDimensions: setCanvasDimensions, 
        getCanvasDimensions: getCanvasDimensions, 
        setCanvasHeight: setCanvasHeight, 
        getCanvasHeight: getCanvasHeight, 
        setCanvasWidth: setCanvasWidth, 
        getCanvasWidth: getCanvasWidth, 
        getContext2D: getContext2D, 
        getCanvasElementById: getCanvasElementById
    };
})();
var PS = PS || {};
PS.WebSocket = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function mkWebSocket(url) {
    return function() {
      return new WebSocket(url)
    }
  }
  ;
    
  function onMessageImpl(socket, callback) {
    return function() {
      socket.onmessage = function(msg) {
        callback(msg.data)()
      }
    }
  }
  ;
    var onMessage = function (socket) {
        return function (callback) {
            return onMessageImpl(socket, callback);
        };
    };
    return {
        onMessage: onMessage, 
        onMessageImpl: onMessageImpl, 
        mkWebSocket: mkWebSocket
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Control_Alt = PS.Control_Alt;
    var Graphics_Canvas = PS.Graphics_Canvas;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff_Ref = PS.Control_Monad_Eff_Ref;
    var Data_DOM_Simple_Window = PS.Data_DOM_Simple_Window;
    var Data_DOM_Simple_Document = PS.Data_DOM_Simple_Document;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    var Dims = PS.Dims;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Date = PS.Data_Date;
    var Data_Traversable = PS.Data_Traversable;
    var Data_String = PS.Data_String;
    var WebSocket = PS.WebSocket;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var DOM = PS.DOM;
    var Data_Time = PS.Data_Time;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    
  function documentUrl() {
    return document.URL;
  };
    var WsIndex = (function () {
        function WsIndex(value0) {
            this.value0 = value0;
        };
        WsIndex.create = function (value0) {
            return new WsIndex(value0);
        };
        return WsIndex;
    })();
    var WebChord = (function () {
        function WebChord(value0) {
            this.value0 = value0;
        };
        WebChord.create = function (value0) {
            return new WebChord(value0);
        };
        return WebChord;
    })();
    var WebSong = (function () {
        function WebSong(value0) {
            this.value0 = value0;
        };
        WebSong.create = function (value0) {
            return new WebSong(value0);
        };
        return WebSong;
    })();
    var WmIndex = (function () {
        function WmIndex(value0) {
            this.value0 = value0;
        };
        WmIndex.create = function (value0) {
            return new WmIndex(value0);
        };
        return WmIndex;
    })();
    var WmSong = (function () {
        function WmSong(value0) {
            this.value0 = value0;
        };
        WmSong.create = function (value0) {
            return new WmSong(value0);
        };
        return WmSong;
    })();
    var AniChord = (function () {
        function AniChord(value0) {
            this.value0 = value0;
        };
        AniChord.create = function (value0) {
            return new AniChord(value0);
        };
        return AniChord;
    })();
    var wsIndexIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("wiIndex")(value))(function (_58) {
            return Prelude["return"](Data_Either.monadEither)(new WsIndex({
                wiIndex: _58
            }));
        });
    });
    var webChordIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("wcName")(value))(function (_54) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("wcDuration")(value))(function (_53) {
                return Prelude["return"](Data_Either.monadEither)(new WebChord({
                    wcName: _54, 
                    wcDuration: _53
                }));
            });
        });
    });
    var webSongIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("wsName")(value))(function (_57) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.arrayIsForeign(webChordIsForeign))(Data_Foreign_Index.indexString)("wsChords")(value))(function (_56) {
                return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("wsTempo")(value))(function (_55) {
                    return Prelude["return"](Data_Either.monadEither)(new WebSong({
                        wsName: _57, 
                        wsChords: _56, 
                        wsTempo: _55
                    }));
                });
            });
        });
    });
    var webMessageIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(WmSong.create)(Data_Foreign_Class.read(webSongIsForeign)(value)))(Prelude["<$>"](Data_Either.functorEither)(WmIndex.create)(Data_Foreign_Class.read(wsIndexIsForeign)(value)));
    });
    var timeToChord = function (modnow) {
        return function (chordtime) {
            return function (duration) {
                var ct = Prelude["-"](Data_Time.ringMilliseconds)(chordtime)(modnow);
                var _729 = Prelude["<"](Data_Time.ordMilliseconds)(ct)(0);
                if (_729) {
                    return Prelude["+"](Data_Time.semiringMilliseconds)(ct)(duration);
                };
                if (!_729) {
                    return ct;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var tempoToBeatMs = function (tempo) {
        var _730 = tempo === 0;
        if (_730) {
            return 0;
        };
        if (!_730) {
            var minute = 1000 * 60;
            return minute / tempo;
        };
        throw new Error("Failed pattern match");
    };
    var msMod = function (_663) {
        return function (_664) {
            return _663 % _664;
        };
    };
    var makeAniChords = function (_661) {
        var beatms = tempoToBeatMs(_661.value0.wsTempo);
        var accum = function (_665) {
            return function (_666) {
                return new Data_Tuple.Tuple(Prelude["+"](Data_Time.semiringMilliseconds)(_665.value0)(Prelude["*"](Data_Time.semiringMilliseconds)(_666.value0.wcDuration)(beatms)), Data_Array.snoc(_665.value1)(new AniChord({
                    name: _666.value0.wcName, 
                    time: _665.value0
                })));
            };
        };
        return Data_Tuple.snd(Data_Foldable.foldl(Data_Foldable.foldableArray)(accum)(new Data_Tuple.Tuple(0, [  ]))(_661.value0.wsChords));
    };
    var drawsong = function (_660) {
        return function (index) {
            return function (canelt) {
                return function __do() {
                    var _71 = Graphics_Canvas.getContext2D(canelt)();
                    var _70 = Data_DOM_Simple_Window.innerWidth(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
                    var _69 = Data_DOM_Simple_Window.innerHeight(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
                    var _68 = Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
                    var _67 = Data_DOM_Simple_Document.body(Data_DOM_Simple_Document.htmlDocument)(_68)();
                    var _66 = Data_DOM_Simple_Element.getElementById(Data_DOM_Simple_Document.htmlDocumentElement)("main")(_68)();
                    return (function () {
                        if (_66 instanceof Data_Maybe.Just) {
                            return function __do() {
                                var _65 = Dims.getClientWidth(_66.value0)();
                                var _64 = Dims.getOffsetHeight(_67)();
                                var _63 = Graphics_Canvas.getCanvasDimensions(canelt)();
                                return (function () {
                                    var canh = (_63.height + _69) - _64;
                                    return function __do() {
                                        Graphics_Canvas.setCanvasDimensions({
                                            height: canh, 
                                            width: _65
                                        })(canelt)();
                                        var _62 = Graphics_Canvas.getCanvasDimensions(canelt)();
                                        return (function () {
                                            var wholerect = {
                                                h: _62.height, 
                                                w: _62.width, 
                                                x: 0, 
                                                y: 0
                                            };
                                            return function __do() {
                                                Graphics_Canvas.clearRect(_71)(wholerect)();
                                                Graphics_Canvas.strokeText(_71)(_660.value0.wsName)(_62.width * 0.5)(25)();
                                                var count = Data_Array.length(_660.value0.wsChords);
                                                if (count === 0) {
                                                    return Prelude.unit;
                                                };
                                                return (function () {
                                                    var mod = function (x) {
                                                        return function (y_1) {
                                                            var z = x % y_1;
                                                            var _755 = z < 0;
                                                            if (_755) {
                                                                return z + y_1;
                                                            };
                                                            if (!_755) {
                                                                return z;
                                                            };
                                                            throw new Error("Failed pattern match");
                                                        };
                                                    };
                                                    var next = Data_Array["!!"](_660.value0.wsChords)(mod(index + 1)(count));
                                                    var prev = Data_Array["!!"](_660.value0.wsChords)(mod(index - 1)(count));
                                                    var cur = Data_Array["!!"](_660.value0.wsChords)(mod(index)(count));
                                                    var toop = new Data_Tuple.Tuple(prev, new Data_Tuple.Tuple(cur, next));
                                                    if (toop.value0 instanceof Data_Maybe.Just && (toop.value1.value0 instanceof Data_Maybe.Just && toop.value1.value1 instanceof Data_Maybe.Just)) {
                                                        return function __do() {
                                                            Graphics_Canvas.strokeText(_71)(toop.value1.value0.value0.value0.wcName)(_62.width * 0.5)(100)();
                                                            Graphics_Canvas.strokeText(_71)(toop.value1.value1.value0.value0.wcName)(_62.width * 0.75)(100)();
                                                            return Prelude.unit;
                                                        };
                                                    };
                                                    return function __do() {
                                                        Debug_Trace.trace("prev/cur/next failed:")();
                                                        return Prelude.unit;
                                                    };
                                                })()();
                                            };
                                        })()();
                                    };
                                })()();
                            };
                        };
                        throw new Error("Failed pattern match");
                    })()();
                };
            };
        };
    };
    var drawAniChords = function (con2d) {
        return function (x) {
            return function (y) {
                return function (xw) {
                    return function (yw) {
                        return function (now) {
                            return function (window) {
                                return function (acs) {
                                    var wholerect = {
                                        h: yw, 
                                        w: xw, 
                                        x: x, 
                                        y: y - yw
                                    };
                                    var toNumber = function (_658) {
                                        return _658;
                                    };
                                    var nwindow = toNumber(window);
                                    var xes = Prelude["<$>"](Data_Array.functorArray)(function (_657) {
                                        return x + xw * (toNumber(_657.value0) / nwindow);
                                    })(acs);
                                    return function __do() {
                                        Graphics_Canvas.save(con2d)();
                                        Graphics_Canvas.rect(con2d)(wholerect)();
                                        Graphics_Canvas.clip(con2d)();
                                        Graphics_Canvas.setFillStyle("#8080FF")(con2d)();
                                        Graphics_Canvas.fillPath(con2d)(Graphics_Canvas.rect(con2d)(wholerect))();
                                        Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function (_659) {
                                            return Graphics_Canvas.strokeText(con2d)(_659.value1.value1.value0.name)(_659.value0)(y - 10);
                                        })(Data_Tuple.zip(xes)(acs))();
                                        Graphics_Canvas.restore(con2d)();
                                        return Prelude.unit;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var animate = function (canelt) {
        return function (songduration) {
            return function (begin) {
                return function (beatms) {
                    return function (windowms) {
                        return function (acs) {
                            return function __do() {
                                var _76 = Graphics_Canvas.getContext2D(canelt)();
                                var _75 = Data_DOM_Simple_Window.innerWidth(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
                                var _74 = Data_DOM_Simple_Window.innerHeight(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
                                var _73 = Data_Date.nowEpochMilliseconds();
                                return (function () {
                                    var modnow = msMod(Prelude["-"](Data_Time.ringMilliseconds)(_73)(begin))(songduration);
                                    var acnows = Prelude["<$>"](Data_Array.functorArray)(function (_655) {
                                        return new Data_Tuple.Tuple(timeToChord(modnow)(_655.value0.time)(songduration), new AniChord(_655.value0));
                                    })(acs);
                                    var drawAcs = Data_Array.filter(function (_656) {
                                        return Prelude["<"](Data_Time.ordMilliseconds)(_656.value0)(windowms);
                                    })(acnows);
                                    return function __do() {
                                        drawAniChords(_76)(25)(100)(500)(60)(modnow)(windowms)(drawAcs)();
                                        return Prelude.unit;
                                    };
                                })()();
                            };
                        };
                    };
                };
            };
        };
    };
    var startAnimation = function (canelt) {
        return function (_662) {
            return function __do() {
                var _72 = Data_Date.nowEpochMilliseconds();
                return (function () {
                    var beatms = tempoToBeatMs(_662.value0.wsTempo);
                    var songduration = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (sum) {
                        return function (_654) {
                            return Prelude["+"](Data_Time.semiringMilliseconds)(sum)(Prelude["*"](Data_Time.semiringMilliseconds)(_654.value0.wcDuration)(beatms));
                        };
                    })(0)(_662.value0.wsChords);
                    var anichords = makeAniChords(new WebSong(_662.value0));
                    return Data_DOM_Simple_Window.setInterval(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)(40)(animate(canelt)(songduration)(_72)(beatms)(5000)(anichords));
                })()();
            };
        };
    };
    var enmessage = function (songref) {
        return function (canelt) {
            return function (msg) {
                return function __do() {
                    var _61 = Graphics_Canvas.getContext2D(canelt)();
                    var _60 = Graphics_Canvas.getCanvasDimensions(canelt)();
                    return (function () {
                        var wholerect = {
                            h: _60.height, 
                            w: _60.width, 
                            x: 0, 
                            y: 0
                        };
                        return function __do() {
                            Debug_Trace.trace("received msg: ")();
                            Debug_Trace.trace(msg)();
                            var wm = Data_Foreign_Class.readJSON(webMessageIsForeign)(msg);
                            if (wm instanceof Data_Either.Right) {
                                if (wm.value0 instanceof WmSong) {
                                    Control_Monad_Eff_Ref.writeRef(songref)(new WebSong(wm.value0.value0.value0))();
                                    drawsong(new WebSong(wm.value0.value0.value0))(0)(canelt)();
                                    startAnimation(canelt)(new WebSong(wm.value0.value0.value0))();
                                    return Prelude.unit;
                                };
                                if (wm.value0 instanceof WmIndex) {
                                    var _59 = Control_Monad_Eff_Ref.readRef(songref)();
                                    return Prelude.unit;
                                };
                                return Debug_Trace.trace("message pattern match failed")();
                            };
                            if (wm instanceof Data_Either.Left) {
                                return Debug_Trace.trace("message read failed")();
                            };
                            throw new Error("Failed pattern match");
                        };
                    })()();
                };
            };
        };
    };
    var enlode = function __do() {
        Debug_Trace.trace("enlode")();
        var _81 = Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
        var _80 = documentUrl();
        return (function () {
            var wsurl = Data_String.replace("https:")("wss:")(Data_String.replace("http:")("ws:")(_80));
            return function __do() {
                var _79 = WebSocket.mkWebSocket(wsurl)();
                var _78 = Graphics_Canvas.getCanvasElementById("canvas")();
                if (_78 instanceof Data_Maybe.Just) {
                    var _77 = Control_Monad_Eff_Ref.newRef(new WebSong({
                        wsName: "", 
                        wsChords: [  ], 
                        wsTempo: 0
                    }))();
                    WebSocket.onMessage(_79)(enmessage(_77)(_78.value0))();
                    return Debug_Trace.trace("enlode end")();
                };
                throw new Error("Failed pattern match");
            };
        })()();
    };
    return {
        AniChord: AniChord, 
        WmIndex: WmIndex, 
        WmSong: WmSong, 
        WsIndex: WsIndex, 
        WebSong: WebSong, 
        WebChord: WebChord, 
        documentUrl: documentUrl, 
        enlode: enlode, 
        timeToChord: timeToChord, 
        drawAniChords: drawAniChords, 
        animate: animate, 
        msMod: msMod, 
        startAnimation: startAnimation, 
        makeAniChords: makeAniChords, 
        tempoToBeatMs: tempoToBeatMs, 
        drawsong: drawsong, 
        enmessage: enmessage, 
        webChordIsForeign: webChordIsForeign, 
        webSongIsForeign: webSongIsForeign, 
        wsIndexIsForeign: wsIndexIsForeign, 
        webMessageIsForeign: webMessageIsForeign
    };
})();
