// Generated by psc version 0.6.9.5
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function showStringImpl(s) {
      return JSON.stringify(s);
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unit = {};
    var showString = new Show(showStringImpl);
    var show = function (dict) {
        return dict.show;
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_16)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        unit: unit, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        show: show, 
        "$": $dollar, 
        showString: showString
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function runFn2(fn) {
      return function(a) {
        return function(b) {
          return fn(a, b);
        };
      };
    }
    ;
    
    function runFn3(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return fn(a, b, c);
          };
        };
      };
    }
    ;
    return {
        runFn3: runFn3, 
        runFn2: runFn2
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Window = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    
  function unsafeDocument(win) {
    return function () {
      return win.document;
    };
  };
    
  function unsafeNavigator(win) {
    return function () {
      return win.navigator;
    };
  };
    
  function unsafeLocation(win) {
    return function () {
      return win.location;
    };
  };
    
  function unsafeSetTimeout(win) {
    return function(delay) {
      return function(func) {
        return function() {
          return win.setTimeout(func, delay);
        };
      };
    };
  };
    
  function unsafeSetInterval(win) {
    return function(delay) {
      return function(func) {
        return function() {
          return win.setInterval(func, delay);
        };
      };
    };
  };
    
  function unsafeClearTimeout(win) {
    return function(timeout) {
      return function() {
        win.clearTimeout(timeout);
      };
    };
  };
    
  function unsafeInnerWidth(win) {
    return function() {
      return win.innerWidth;
    };
  };
    
  function unsafeInnerHeight(win) {
    return function() {
      return win.innerHeight;
    };
  };
    return {
        unsafeInnerHeight: unsafeInnerHeight, 
        unsafeInnerWidth: unsafeInnerWidth, 
        unsafeClearTimeout: unsafeClearTimeout, 
        unsafeSetInterval: unsafeSetInterval, 
        unsafeSetTimeout: unsafeSetTimeout, 
        unsafeLocation: unsafeLocation, 
        unsafeNavigator: unsafeNavigator, 
        unsafeDocument: unsafeDocument
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function trace(s) {
      return function() {
        console.log(s);
        return {};
      };
    }
    ;
    return {
        trace: trace
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    return {
        Nothing: Nothing, 
        Just: Just
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Maybe = PS.Data_Maybe;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    return {
        replace: replace
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Window = (function () {
    "use strict";
    var Data_DOM_Simple_Unsafe_Window = PS.Data_DOM_Simple_Unsafe_Window;
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_Maybe = PS.Data_Maybe;
    var globalWindow = window;;
    var Window = function (clearTimeout, document, innerHeight, innerWidth, location, navigator, setInterval, setTimeout) {
        this.clearTimeout = clearTimeout;
        this.document = document;
        this.innerHeight = innerHeight;
        this.innerWidth = innerWidth;
        this.location = location;
        this.navigator = navigator;
        this.setInterval = setInterval;
        this.setTimeout = setTimeout;
    };
    var htmlWindow = new Window(Data_DOM_Simple_Unsafe_Window.unsafeClearTimeout, Data_DOM_Simple_Unsafe_Window.unsafeDocument, Data_DOM_Simple_Unsafe_Window.unsafeInnerHeight, Data_DOM_Simple_Unsafe_Window.unsafeInnerWidth, Data_DOM_Simple_Unsafe_Window.unsafeLocation, Data_DOM_Simple_Unsafe_Window.unsafeNavigator, Data_DOM_Simple_Unsafe_Window.unsafeSetInterval, Data_DOM_Simple_Unsafe_Window.unsafeSetTimeout);
    var document = function (dict) {
        return dict.document;
    };
    return {
        Window: Window, 
        globalWindow: globalWindow, 
        document: document, 
        htmlWindow: htmlWindow
    };
})();
var PS = PS || {};
PS.Graphics_Canvas = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function getCanvasElementByIdImpl(id, Just, Nothing) {
    return function() {
      var el = document.getElementById(id);
      if (el && el instanceof HTMLCanvasElement) {
        return Just(el);
      } else {
        return Nothing;
      }
    };
  };
    function getContext2D(c) {  return function() {    return c.getContext('2d');  };};
    function getCanvasWidth(canvas){  return function(){    return canvas.width;  };};;
    function getCanvasHeight(canvas){  return function(){    return canvas.height;  };};;
    function setFillStyle(style) {  return function(ctx) {    return function() {      ctx.fillStyle = style;      return ctx;    };  };};
    function beginPath(ctx) {  return function() {    ctx.beginPath();    return ctx;  };};
    function fill(ctx) {  return function() {    ctx.fill();    return ctx;  };};
    function rect(ctx) {  return function(r) {    return function() {      ctx.rect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function clearRect(ctx) {  return function(r) {    return function() {      ctx.clearRect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function strokeText(ctx) {  return function(text) {    return function(x) {      return function(y) {        return function() {          ctx.strokeText(text, x, y);          return ctx;        };      };    };  };};
    var getCanvasElementById = function (elId) {
        return getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
    var getCanvasDimensions = function (ce) {
        return function __do() {
            var _46 = getCanvasWidth(ce)();
            var _45 = getCanvasHeight(ce)();
            return {
                width: _46, 
                height: _45
            };
        };
    };
    var fillPath = function (ctx) {
        return function (path) {
            return function __do() {
                beginPath(ctx)();
                var _48 = path();
                fill(ctx)();
                return _48;
            };
        };
    };
    return {
        strokeText: strokeText, 
        clearRect: clearRect, 
        rect: rect, 
        fillPath: fillPath, 
        fill: fill, 
        beginPath: beginPath, 
        setFillStyle: setFillStyle, 
        getCanvasDimensions: getCanvasDimensions, 
        getCanvasHeight: getCanvasHeight, 
        getCanvasWidth: getCanvasWidth, 
        getContext2D: getContext2D, 
        getCanvasElementById: getCanvasElementById
    };
})();
var PS = PS || {};
PS.WebSocket = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function mkWebSocket(url) {
    return function() {
      return new WebSocket(url)
    }
  }
  ;
    
  function onMessageImpl(socket, callback) {
    return function() {
      socket.onmessage = function(msg) {
        callback(msg.data)()
      }
    }
  }
  ;
    var onMessage = function (socket) {
        return function (callback) {
            return onMessageImpl(socket, callback);
        };
    };
    return {
        onMessage: onMessage, 
        onMessageImpl: onMessageImpl, 
        mkWebSocket: mkWebSocket
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Debug_Trace = PS.Debug_Trace;
    var Graphics_Canvas = PS.Graphics_Canvas;
    var Data_DOM_Simple_Window = PS.Data_DOM_Simple_Window;
    var Data_String = PS.Data_String;
    var WebSocket = PS.WebSocket;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var DOM = PS.DOM;
    
  function documentUrl() {
    return document.URL;
  };
    var WebSong = function (x) {
        return x;
    };
    var meh = function __do() {
        var _59 = Graphics_Canvas.getCanvasElementById("canvas")();
        return (function () {
            if (_59 instanceof Data_Maybe.Just) {
                return function __do() {
                    var _58 = Graphics_Canvas.getContext2D(_59.value0)();
                    Graphics_Canvas.setFillStyle("#FF00FF")(_58)();
                    return Graphics_Canvas.fillPath(_58)(Graphics_Canvas.rect(_58)({
                        x: 150, 
                        y: 150, 
                        w: 300, 
                        h: 50
                    }))();
                };
            };
            throw new Error("Failed pattern match");
        })()();
    };
    var main = function __do() {
        var _57 = Graphics_Canvas.getCanvasElementById("canvas")();
        return (function () {
            if (_57 instanceof Data_Maybe.Just) {
                return function __do() {
                    var _56 = Graphics_Canvas.getContext2D(_57.value0)();
                    Graphics_Canvas.setFillStyle("#0000FF")(_56)();
                    return Graphics_Canvas.fillPath(_56)(Graphics_Canvas.rect(_56)({
                        x: 250, 
                        y: 150, 
                        w: 100, 
                        h: 100
                    }))();
                };
            };
            throw new Error("Failed pattern match");
        })()();
    };
    var enmessage = function (canelt) {
        return function (msg) {
            return function __do() {
                Debug_Trace.trace(Prelude.show(Prelude.showString)(msg))();
                var _51 = Graphics_Canvas.getContext2D(canelt)();
                var _50 = Graphics_Canvas.getCanvasDimensions(canelt)();
                return (function () {
                    var wholerect = {
                        h: _50.height, 
                        w: _50.width, 
                        x: 0, 
                        y: 0
                    };
                    return function __do() {
                        Graphics_Canvas.clearRect(_51)(wholerect)();
                        Graphics_Canvas.strokeText(_51)(Prelude.show(Prelude.showString)(msg))(50)(100)();
                        return Prelude.unit;
                    };
                })()();
            };
        };
    };
    var enlode = function __do() {
        Debug_Trace.trace("enlode")();
        var _55 = Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
        var _54 = documentUrl();
        return (function () {
            var wsurl = Data_String.replace("https:")("wss:")(Data_String.replace("http:")("ws:")(_54));
            return function __do() {
                var _53 = WebSocket.mkWebSocket(wsurl)();
                var _52 = Graphics_Canvas.getCanvasElementById("canvas")();
                if (_52 instanceof Data_Maybe.Just) {
                    WebSocket.onMessage(_53)(enmessage(_52.value0))();
                    return Debug_Trace.trace("enlode end")();
                };
                throw new Error("Failed pattern match");
            };
        })()();
    };
    var blah = function (r) {
        return Prelude.unit;
    };
    return {
        WebSong: WebSong, 
        meh: meh, 
        main: main, 
        enlode: enlode, 
        enmessage: enmessage, 
        blah: blah, 
        documentUrl: documentUrl
    };
})();
