// Generated by psc version 0.6.9.5
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function numDiv(n1) {
      return function(n2) {
        return n1 / n2;
      };
    }
    ;
    
    function numMod(n1) {
      return function(n2) {
        return n1 % n2;
      };
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function numShl(n1) {
      return function(n2) {
        return n1 << n2;
      };
    }
    ;
    
    function numShr(n1) {
      return function(n2) {
        return n1 >> n2;
      };
    }
    ;
    
    function numZshr(n1) {
      return function(n2) {
        return n1 >>> n2;
      };
    }
    ;
    
    function numAnd(n1) {
      return function(n2) {
        return n1 & n2;
      };
    }
    ;
    
    function numOr(n1) {
      return function(n2) {
        return n1 | n2;
      };
    }
    ;
    
    function numXor(n1) {
      return function(n2) {
        return n1 ^ n2;
      };
    }
    ;
    
    function numComplement(n) {
      return ~n;
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Semiring = function ($times, $plus, one, zero) {
        this["*"] = $times;
        this["+"] = $plus;
        this.one = one;
        this.zero = zero;
    };
    var ModuloSemiring = function ($div, __superclass_Prelude$dotSemiring_0, mod) {
        this["/"] = $div;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
        this.mod = mod;
    };
    var Ring = function ($minus, __superclass_Prelude$dotSemiring_0) {
        this["-"] = $minus;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var Bits = function ($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $percent = numMod;
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var show = function (dict) {
        return dict.show;
    };
    var semiringNumber = new Semiring(numMul, numAdd, 1, 0);
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var ringNumber = new Ring(numSub, function () {
        return semiringNumber;
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var moduloSemiringNumber = new ModuloSemiring(numDiv, function () {
        return semiringNumber;
    }, function (_99) {
        return function (_100) {
            return 0;
        };
    });
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _692 = compare(__dict_Ord_12)(a1)(a2);
                if (_692 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _693 = compare(__dict_Ord_14)(a1)(a2);
                if (_693 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_15) {
        return function (a1) {
            return function (a2) {
                var _694 = compare(__dict_Ord_15)(a1)(a2);
                if (_694 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_16)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Ring: Ring, 
        ModuloSemiring: ModuloSemiring, 
        Semiring: Semiring, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "<>": $less$greater, 
        "||": $bar$bar, 
        complement: complement, 
        ">=": $greater$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        "%": $percent, 
        "-": $minus, 
        "/": $div, 
        "*": $times, 
        "+": $plus, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "$": $dollar, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        semiringNumber: semiringNumber, 
        ringNumber: ringNumber, 
        moduloSemiringNumber: moduloSemiringNumber, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        ordNumber: ordNumber, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function unsafeIndex(xs) {
      return function(n) {
        return xs[n];
      };
    }
    ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.$$Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var ceil = Math.ceil;;
    var floor = Math.floor;;
    var pi      = Math.PI;;
    return {
        pi: pi, 
        floor: floor, 
        ceil: ceil
    };
})();
var PS = PS || {};
PS.Data_Time = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Int = PS.Data_Int;
    var Milliseconds = function (x) {
        return x;
    };
    var semiringMilliseconds = new Prelude.Semiring(function (_208) {
        return function (_209) {
            return _208 * _209;
        };
    }, function (_206) {
        return function (_207) {
            return _206 + _207;
        };
    }, 1, 0);
    var ringMilliseconds = new Prelude.Ring(function (_210) {
        return function (_211) {
            return _210 - _211;
        };
    }, function () {
        return semiringMilliseconds;
    });
    var eqMilliseconds = new Prelude.Eq(function (_202) {
        return function (_203) {
            return _202 !== _203;
        };
    }, function (_200) {
        return function (_201) {
            return _200 === _201;
        };
    });
    var ordMilliseconds = new Prelude.Ord(function () {
        return eqMilliseconds;
    }, function (_204) {
        return function (_205) {
            return Prelude.compare(Prelude.ordNumber)(_204)(_205);
        };
    });
    return {
        Milliseconds: Milliseconds, 
        eqMilliseconds: eqMilliseconds, 
        ordMilliseconds: ordMilliseconds, 
        semiringMilliseconds: semiringMilliseconds, 
        ringMilliseconds: ringMilliseconds
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function runFn2(fn) {
      return function(a) {
        return function(b) {
          return fn(a, b);
        };
      };
    }
    ;
    
    function runFn3(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return fn(a, b, c);
          };
        };
      };
    }
    ;
    
    function runFn4(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return fn(a, b, c, d);
            };
          };
        };
      };
    }
    ;
    return {
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Ref = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function newRef(val) {
    return function () {
      return { value: val };
    };
  }
;
    
  function readRef(ref) {
    return function() {
      return ref.value;
    };
  }
;
    
  function writeRef(ref) {
    return function(val) {
      return function() {
        ref.value = val;
        return {};
      };
    };
  }
;
    return {
        writeRef: writeRef, 
        readRef: readRef, 
        newRef: newRef
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Document = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    
  function unsafeTitle(src) {
    return function () {
      return src.title;
    };
  };
    
  function unsafeSetTitle(value) {
    return function (src) {
      return function () {
        src.title = value;
      };
    };
  };
    
  function unsafeBody(src) {
    return function () {
      return src.body;
    };
  };
    
  function unsafeSetBody(value) {
    return function (src) {
      return function () {
        src.body = value;
      };
    };
  };
    return {
        unsafeSetBody: unsafeSetBody, 
        unsafeBody: unsafeBody, 
        unsafeSetTitle: unsafeSetTitle, 
        unsafeTitle: unsafeTitle
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Element = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    
  function unsafeGetElementById(targ_id) {
    return function (src) {
      return function () {
        return src.getElementById(targ_id);
      };
    };
  };
    
  function unsafeGetElementsByClassName(targ_id) {
    return function (src) {
      return function () {
        return src.getElementsByClassName(targ_id);
      };
    };
  };
    
  function unsafeGetElementsByName(targ_id) {
    return function (src) {
      return function () {
        return src.getElementsByName(targ_id);
      };
    };
  };
    
  function unsafeQuerySelector(selector) {
    return function (src) {
      return function () {
        return src.querySelector(selector);
      };
    };
  };
    
  function unsafeQuerySelectorAll(selector) {
    return function (src) {
      return function () {
        return src.querySelectorAll(selector);
      };
    };
  };
    
  function unsafeGetAttribute(name) {
    return function (src) {
      return function () {
        return src.getAttribute(name);
      };
    };
  };
    
  function unsafeSetAttribute(name) {
    return function (value) {
      return function (src) {
        return function () {
          src.setAttribute(name, value);
          return {};
        };
      };
    };
  };
    
  function unsafeHasAttribute(name) {
    return function (src) {
      return function () {
        return src.hasAttribute(name);
      };
    };
  };
    
  function unsafeRemoveAttribute(name) {
    return function (src) {
      return function () {
        src.removeAttribute(name);
        return {};
      };
    };
  };
    
  function unsafeGetStyleAttr(name) {
    return function (src) {
      return function () {
        return src.style[name];
      };
    };
  };
    
  function unsafeSetStyleAttr(name) {
    return function (value) {
      return function (src) {
        return function () {
          src.style[name] = value;
          return {};
        };
      };
    };
  };
    
  function unsafeChildren(src) {
    return function () {
      return src.children;
    };
  };
    
  function unsafeAppendChild(src) {
    return function (child) {
      return function () {
        return src.appendChild(child);
      };
    };
  };
    
  function unsafeInnerHTML(src) {
    return function () {
      return src.innerHTML;
    };
  };
    
  function unsafeSetInnerHTML(value) {
    return function (src) {
      return function () {
        src.innerHTML = value;
        return {};
      };
    };
  };
    
  function unsafeTextContent(src) {
    return function () {
      return src.textContent;
    };
  };
    
  function unsafeSetTextContent(value) {
    return function (src) {
      return function () {
        src.textContent = value;
        return {};
      };
    };
  };
    
  function unsafeValue(src) {
    return function () {
      return src.value;
    };
  };
    
  function unsafeSetValue(value) {
    return function (src) {
      return function () {
        src.value = value;
        return {};
      };
    };
  };
    
  function unsafeContentWindow(obj) {
    return function () {
      return obj.contentWindow;
    };
  };
    
  function unsafeClassAdd(value) {
    return function (src) {
      return function () {
        src.classList.add(value);
        return {};
      };
    };
  };
    
  function unsafeClassRemove(value) {
    return function (src) {
      return function () {
        src.classList.remove(value);
        return {};
      };
    };
  };
    
  function unsafeClassToggle(value) {
    return function (src) {
      return function () {
        src.classList.toggle(value);
        return {};
      };
    };
  };
    
  function unsafeClassContains(value) {
    return function (src) {
      return function () {
        return src.classList.contains(value);
      };
    };
  };
    return {
        unsafeClassContains: unsafeClassContains, 
        unsafeClassToggle: unsafeClassToggle, 
        unsafeClassRemove: unsafeClassRemove, 
        unsafeClassAdd: unsafeClassAdd, 
        unsafeContentWindow: unsafeContentWindow, 
        unsafeSetValue: unsafeSetValue, 
        unsafeValue: unsafeValue, 
        unsafeSetTextContent: unsafeSetTextContent, 
        unsafeTextContent: unsafeTextContent, 
        unsafeSetInnerHTML: unsafeSetInnerHTML, 
        unsafeInnerHTML: unsafeInnerHTML, 
        unsafeAppendChild: unsafeAppendChild, 
        unsafeChildren: unsafeChildren, 
        unsafeSetStyleAttr: unsafeSetStyleAttr, 
        unsafeGetStyleAttr: unsafeGetStyleAttr, 
        unsafeRemoveAttribute: unsafeRemoveAttribute, 
        unsafeHasAttribute: unsafeHasAttribute, 
        unsafeSetAttribute: unsafeSetAttribute, 
        unsafeGetAttribute: unsafeGetAttribute, 
        unsafeQuerySelectorAll: unsafeQuerySelectorAll, 
        unsafeQuerySelector: unsafeQuerySelector, 
        unsafeGetElementsByName: unsafeGetElementsByName, 
        unsafeGetElementsByClassName: unsafeGetElementsByClassName, 
        unsafeGetElementById: unsafeGetElementById
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Events = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    
  function unsafeAddEventListener(targ) {
    return function (cb) {
       return function (src) {
         return function () {
           src.addEventListener(targ, function(evt) {
             cb(evt)();
           });
         };
       };
    };
  };
    
  function unsafeRemoveEventListener(targ) {
    return function (cb) {
       return function (src) {
         return function () {
           src.removeEventListener(targ, function (evt) {
             cb(evt)();
           });
         };
       };
    };
  };
    
  function unsafeEventTarget(event) {
    return function () {
      return event.target;
    };
  };
    
  function unsafeStopPropagation(event) {
    return function () {
      event.stopPropagation();
    };
  };
    
  function unsafePreventDefault(event) {
    return function () {
      event.preventDefault();
    };
  };
    
  function unsafeEventNumberProp(prop) {
    return function (event) {
      return function() {
        return event[prop];
      };
    };
  };
    
  function unsafeEventView(event) {
    return function() {
      return event.view;
    };
  };
    return {
        unsafeEventView: unsafeEventView, 
        unsafeEventNumberProp: unsafeEventNumberProp, 
        unsafePreventDefault: unsafePreventDefault, 
        unsafeStopPropagation: unsafeStopPropagation, 
        unsafeEventTarget: unsafeEventTarget, 
        unsafeRemoveEventListener: unsafeRemoveEventListener, 
        unsafeAddEventListener: unsafeAddEventListener
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Window = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    
  function unsafeDocument(win) {
    return function () {
      return win.document;
    };
  };
    
  function unsafeNavigator(win) {
    return function () {
      return win.navigator;
    };
  };
    
  function unsafeLocation(win) {
    return function () {
      return win.location;
    };
  };
    
  function unsafeSetTimeout(win) {
    return function(delay) {
      return function(func) {
        return function() {
          return win.setTimeout(func, delay);
        };
      };
    };
  };
    
  function unsafeSetInterval(win) {
    return function(delay) {
      return function(func) {
        return function() {
          return win.setInterval(func, delay);
        };
      };
    };
  };
    
  function unsafeClearTimeout(win) {
    return function(timeout) {
      return function() {
        win.clearTimeout(timeout);
      };
    };
  };
    
  function unsafeInnerWidth(win) {
    return function() {
      return win.innerWidth;
    };
  };
    
  function unsafeInnerHeight(win) {
    return function() {
      return win.innerHeight;
    };
  };
    return {
        unsafeInnerHeight: unsafeInnerHeight, 
        unsafeInnerWidth: unsafeInnerWidth, 
        unsafeClearTimeout: unsafeClearTimeout, 
        unsafeSetInterval: unsafeSetInterval, 
        unsafeSetTimeout: unsafeSetTimeout, 
        unsafeLocation: unsafeLocation, 
        unsafeNavigator: unsafeNavigator, 
        unsafeDocument: unsafeDocument
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function trace(s) {
      return function() {
        console.log(s);
        return {};
      };
    }
    ;
    return {
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Extend = PS.Control_Extend;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var functorEither = new Prelude.Functor(function (f) {
        return function (_262) {
            if (_262 instanceof Left) {
                return new Left(_262.value0);
            };
            if (_262 instanceof Right) {
                return new Right(f(_262.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var either = function (f) {
        return function (g) {
            return function (_261) {
                if (_261 instanceof Left) {
                    return f(_261.value0);
                };
                if (_261 instanceof Right) {
                    return g(_261.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var applyEither = new Prelude.Apply(function (_263) {
        return function (r) {
            if (_263 instanceof Left) {
                return new Left(_263.value0);
            };
            if (_263 instanceof Right) {
                return Prelude["<$>"](functorEither)(_263.value0)(r);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_260) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_264) {
        return function (r) {
            if (_264 instanceof Left) {
                return r;
            };
            return _264;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var maybe = function (b) {
        return function (f) {
            return function (_273) {
                if (_273 instanceof Nothing) {
                    return b;
                };
                if (_273 instanceof Just) {
                    return f(_273.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorMaybe = new Prelude.Functor(function (fn) {
        return function (_274) {
            if (_274 instanceof Just) {
                return new Just(fn(_274.value0));
            };
            return Nothing.value;
        };
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        maybe: maybe, 
        functorMaybe: functorMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            var _733 = n < 0 || (n >= length(xs) || isInt(n));
            if (_733) {
                return Data_Maybe.Nothing.value;
            };
            if (!_733) {
                return new Data_Maybe.Just(xs[n]);
            };
            throw new Error("Failed pattern match");
        };
    };
    var functorArray = new Prelude.Functor(map);
    return {
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        length: length, 
        map: map, 
        snoc: snoc, 
        "!!": $bang$bang, 
        functorArray: functorArray
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Array = PS.Data_Array;
    var Data_Either = PS.Data_Either;
    
  function parseJSONImpl(left, right, str) {
    try {
      return right(JSON.parse(str));
    } catch (e) {
      return left(e.toString());
    }
  }
  ;
    
  function unsafeFromForeign(value) {
    return value;
  }
  ;
    
  function typeOf(value) {
    return typeof value;
  }
  ;
    
  function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  }
  ;
    
  function isNull(value) {
    return value === null;
  }
  ;
    
  function isUndefined(value) {
    return value === undefined;
  }
  ;
    
  var isArray = Array.isArray || function(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  };
  ;
    var TypeMismatch = (function () {
        function TypeMismatch(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeMismatch.create = function (value0) {
            return function (value1) {
                return new TypeMismatch(value0, value1);
            };
        };
        return TypeMismatch;
    })();
    var ErrorAtIndex = (function () {
        function ErrorAtIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtIndex.create = function (value0) {
            return function (value1) {
                return new ErrorAtIndex(value0, value1);
            };
        };
        return ErrorAtIndex;
    })();
    var ErrorAtProperty = (function () {
        function ErrorAtProperty(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtProperty.create = function (value0) {
            return function (value1) {
                return new ErrorAtProperty(value0, value1);
            };
        };
        return ErrorAtProperty;
    })();
    var JSONError = (function () {
        function JSONError(value0) {
            this.value0 = value0;
        };
        JSONError.create = function (value0) {
            return new JSONError(value0);
        };
        return JSONError;
    })();
    var unsafeReadTagged = function (tag) {
        return function (value) {
            if (tagOf(value) === tag) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(value));
            };
            return new Data_Either.Left(new TypeMismatch(tag, tagOf(value)));
        };
    };
    var readString = unsafeReadTagged("String");
    var readNumber = unsafeReadTagged("Number");
    var readArray = function (value) {
        if (isArray(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(value));
        };
        return new Data_Either.Left(new TypeMismatch("array", tagOf(value)));
    };
    var parseJSON = function (json) {
        return parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
    };
    return {
        TypeMismatch: TypeMismatch, 
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        readArray: readArray, 
        readNumber: readNumber, 
        readString: readString, 
        isArray: isArray, 
        isUndefined: isUndefined, 
        isNull: isNull, 
        tagOf: tagOf, 
        typeOf: typeOf, 
        unsafeReadTagged: unsafeReadTagged, 
        unsafeFromForeign: unsafeFromForeign, 
        parseJSON: parseJSON
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    
  function unsafeReadPropImpl(f, s, key, value) {
    return value == null ? f : s(value[key]);
  }
  ;
    
  function unsafeHasOwnProperty(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  }
  ;
    
  function unsafeHasProperty(prop, value) {
    return prop in value;
  }
  ;
    var Index = function ($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
        };
    };
    var prop = unsafeReadProp;
    var hasPropertyImpl = function (prop_1) {
        return function (value) {
            if (Data_Foreign.isNull(value)) {
                return false;
            };
            if (Data_Foreign.isUndefined(value)) {
                return false;
            };
            if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
                return unsafeHasProperty(prop_1, value);
            };
            return false;
        };
    };
    var hasOwnPropertyImpl = function (prop_1) {
        return function (value) {
            if (Data_Foreign.isNull(value)) {
                return false;
            };
            if (Data_Foreign.isUndefined(value)) {
                return false;
            };
            if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
                return unsafeHasOwnProperty(prop_1, value);
            };
            return false;
        };
    };
    var indexString = new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        Index: Index, 
        errorAt: errorAt, 
        "!": $bang, 
        prop: prop, 
        indexString: indexString
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Unsafe_Utils = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function ensure3(nothing) {
    return function(just) {
      return function(v) {
        if (v === undefined || v === null) {
          return nothing;
        } else {
          return just(v);
        }
      };
   };
  };
    var ensure = ensure3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    return {
        ensure: ensure, 
        ensure3: ensure3
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        mempty: mempty
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var snd = function (_384) {
        return _384.value1;
    };
    var fst = function (_383) {
        return _383.value0;
    };
    return {
        Tuple: Tuple, 
        zip: zip, 
        snd: snd, 
        fst: fst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  }
  ;
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  }
  ;
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var foldableMaybe = new Foldable(function (__dict_Monoid_289) {
        return function (f) {
            return function (_482) {
                if (_482 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_289);
                };
                if (_482 instanceof Data_Maybe.Just) {
                    return f(_482.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (f) {
        return function (z) {
            return function (_481) {
                if (_481 instanceof Data_Maybe.Nothing) {
                    return z;
                };
                if (_481 instanceof Data_Maybe.Just) {
                    return f(z)(_481.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (f) {
        return function (z) {
            return function (_480) {
                if (_480 instanceof Data_Maybe.Nothing) {
                    return z;
                };
                if (_480 instanceof Data_Maybe.Just) {
                    return f(_480.value0)(z);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_292) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_292["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_292))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableMaybe: foldableMaybe
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Element = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_DOM_Simple_Unsafe_Element = PS.Data_DOM_Simple_Unsafe_Element;
    var Data_DOM_Simple_Unsafe_Utils = PS.Data_DOM_Simple_Unsafe_Utils;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var DOM = PS.DOM;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Element = function (appendChild, children, classAdd, classContains, classRemove, classToggle, contentWindow, getAttribute, getElementById, getElementsByClassName, getElementsByName, getStyleAttr, hasAttribute, innerHTML, querySelector, querySelectorAll, removeAttribute, setAttribute, setInnerHTML, setStyleAttr, setTextContent, setValue, textContent, value) {
        this.appendChild = appendChild;
        this.children = children;
        this.classAdd = classAdd;
        this.classContains = classContains;
        this.classRemove = classRemove;
        this.classToggle = classToggle;
        this.contentWindow = contentWindow;
        this.getAttribute = getAttribute;
        this.getElementById = getElementById;
        this.getElementsByClassName = getElementsByClassName;
        this.getElementsByName = getElementsByName;
        this.getStyleAttr = getStyleAttr;
        this.hasAttribute = hasAttribute;
        this.innerHTML = innerHTML;
        this.querySelector = querySelector;
        this.querySelectorAll = querySelectorAll;
        this.removeAttribute = removeAttribute;
        this.setAttribute = setAttribute;
        this.setInnerHTML = setInnerHTML;
        this.setStyleAttr = setStyleAttr;
        this.setTextContent = setTextContent;
        this.setValue = setValue;
        this.textContent = textContent;
        this.value = value;
    };
    var setTextContent = function (dict) {
        return dict.setTextContent;
    };
    var htmlElement = new Element(Data_DOM_Simple_Unsafe_Element.unsafeAppendChild, Data_DOM_Simple_Unsafe_Element.unsafeChildren, Data_DOM_Simple_Unsafe_Element.unsafeClassAdd, Data_DOM_Simple_Unsafe_Element.unsafeClassContains, Data_DOM_Simple_Unsafe_Element.unsafeClassRemove, Data_DOM_Simple_Unsafe_Element.unsafeClassToggle, Data_DOM_Simple_Unsafe_Element.unsafeContentWindow, Data_DOM_Simple_Unsafe_Element.unsafeGetAttribute, function (id) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeGetElementById(id)(el))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_DOM_Simple_Unsafe_Utils.ensure)(Prelude["return"](Control_Monad_Eff.monadEff)));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByClassName, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByName, Data_DOM_Simple_Unsafe_Element.unsafeGetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeHasAttribute, Data_DOM_Simple_Unsafe_Element.unsafeInnerHTML, function (sel) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeQuerySelector(sel)(el))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_DOM_Simple_Unsafe_Utils.ensure)(Prelude["return"](Control_Monad_Eff.monadEff)));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeQuerySelectorAll, Data_DOM_Simple_Unsafe_Element.unsafeRemoveAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeSetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeSetTextContent, Data_DOM_Simple_Unsafe_Element.unsafeSetValue, Data_DOM_Simple_Unsafe_Element.unsafeTextContent, Data_DOM_Simple_Unsafe_Element.unsafeValue);
    var getElementById = function (dict) {
        return dict.getElementById;
    };
    return {
        Element: Element, 
        setTextContent: setTextContent, 
        getElementById: getElementById, 
        htmlElement: htmlElement
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Document = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_DOM_Simple_Unsafe_Element = PS.Data_DOM_Simple_Unsafe_Element;
    var Data_DOM_Simple_Unsafe_Utils = PS.Data_DOM_Simple_Unsafe_Utils;
    var Data_DOM_Simple_Unsafe_Document = PS.Data_DOM_Simple_Unsafe_Document;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    var Document = function (body, setBody, setTitle, title) {
        this.body = body;
        this.setBody = setBody;
        this.setTitle = setTitle;
        this.title = title;
    };
    var htmlDocumentElement = new Data_DOM_Simple_Element.Element(Data_DOM_Simple_Unsafe_Element.unsafeAppendChild, Data_DOM_Simple_Unsafe_Element.unsafeChildren, Data_DOM_Simple_Unsafe_Element.unsafeClassAdd, Data_DOM_Simple_Unsafe_Element.unsafeClassContains, Data_DOM_Simple_Unsafe_Element.unsafeClassRemove, Data_DOM_Simple_Unsafe_Element.unsafeClassToggle, Data_DOM_Simple_Unsafe_Element.unsafeContentWindow, Data_DOM_Simple_Unsafe_Element.unsafeGetAttribute, function (id) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeGetElementById(id)(el))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Control_Monad_Eff.monadEff))(Data_DOM_Simple_Unsafe_Utils.ensure));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByClassName, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByName, Data_DOM_Simple_Unsafe_Element.unsafeGetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeHasAttribute, Data_DOM_Simple_Unsafe_Element.unsafeInnerHTML, function (sel) {
        return function (el) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Data_DOM_Simple_Unsafe_Element.unsafeQuerySelector(sel)(el))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Control_Monad_Eff.monadEff))(Data_DOM_Simple_Unsafe_Utils.ensure));
        };
    }, Data_DOM_Simple_Unsafe_Element.unsafeQuerySelectorAll, Data_DOM_Simple_Unsafe_Element.unsafeRemoveAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeSetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeSetTextContent, Data_DOM_Simple_Unsafe_Element.unsafeSetValue, Data_DOM_Simple_Unsafe_Element.unsafeTextContent, Data_DOM_Simple_Unsafe_Element.unsafeValue);
    var htmlDocument = new Document(Data_DOM_Simple_Unsafe_Document.unsafeBody, Data_DOM_Simple_Unsafe_Document.unsafeSetBody, Data_DOM_Simple_Unsafe_Document.unsafeSetTitle, Data_DOM_Simple_Unsafe_Document.unsafeTitle);
    var body = function (dict) {
        return dict.body;
    };
    return {
        Document: Document, 
        body: body, 
        htmlDocumentElement: htmlDocumentElement, 
        htmlDocument: htmlDocument
    };
})();
var PS = PS || {};
PS.Dims = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var DOM = PS.DOM;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    function getClientWidth(htmlelt){  return function(){    return htmlelt.clientWidth;  };};;
    function getOffsetHeight(htmlelt){  return function(){    return htmlelt.offsetHeight;  };};;
    return {
        getOffsetHeight: getOffsetHeight, 
        getClientWidth: getClientWidth
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Maybe = PS.Data_Maybe;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    return {
        replace: replace
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Window = (function () {
    "use strict";
    var Data_DOM_Simple_Unsafe_Window = PS.Data_DOM_Simple_Unsafe_Window;
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_Maybe = PS.Data_Maybe;
    var globalWindow = window;;
    var Window = function (clearTimeout, document, innerHeight, innerWidth, location, navigator, setInterval, setTimeout) {
        this.clearTimeout = clearTimeout;
        this.document = document;
        this.innerHeight = innerHeight;
        this.innerWidth = innerWidth;
        this.location = location;
        this.navigator = navigator;
        this.setInterval = setInterval;
        this.setTimeout = setTimeout;
    };
    var setInterval = function (dict) {
        return dict.setInterval;
    };
    var innerWidth = function (dict) {
        return dict.innerWidth;
    };
    var innerHeight = function (dict) {
        return dict.innerHeight;
    };
    var htmlWindow = new Window(Data_DOM_Simple_Unsafe_Window.unsafeClearTimeout, Data_DOM_Simple_Unsafe_Window.unsafeDocument, Data_DOM_Simple_Unsafe_Window.unsafeInnerHeight, Data_DOM_Simple_Unsafe_Window.unsafeInnerWidth, Data_DOM_Simple_Unsafe_Window.unsafeLocation, Data_DOM_Simple_Unsafe_Window.unsafeNavigator, Data_DOM_Simple_Unsafe_Window.unsafeSetInterval, Data_DOM_Simple_Unsafe_Window.unsafeSetTimeout);
    var document = function (dict) {
        return dict.document;
    };
    var clearTimeout = function (dict) {
        return dict.clearTimeout;
    };
    return {
        Window: Window, 
        globalWindow: globalWindow, 
        innerHeight: innerHeight, 
        innerWidth: innerWidth, 
        clearTimeout: clearTimeout, 
        setInterval: setInterval, 
        document: document, 
        htmlWindow: htmlWindow
    };
})();
var PS = PS || {};
PS.Data_DOM_Simple_Events = (function () {
    "use strict";
    var Data_DOM_Simple_Unsafe_Events = PS.Data_DOM_Simple_Unsafe_Events;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad = PS.Control_Monad;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_DOM_Simple_Window = PS.Data_DOM_Simple_Window;
    var Data_DOM_Simple_Ajax = PS.Data_DOM_Simple_Ajax;
    var DOM = PS.DOM;
    var LoadEvent = (function () {
        function LoadEvent() {

        };
        LoadEvent.value = new LoadEvent();
        return LoadEvent;
    })();
    var UnloadEvent = (function () {
        function UnloadEvent() {

        };
        UnloadEvent.value = new UnloadEvent();
        return UnloadEvent;
    })();
    var AbortEvent = (function () {
        function AbortEvent() {

        };
        AbortEvent.value = new AbortEvent();
        return AbortEvent;
    })();
    var ErrorEvent = (function () {
        function ErrorEvent() {

        };
        ErrorEvent.value = new ErrorEvent();
        return ErrorEvent;
    })();
    var SelectEvent = (function () {
        function SelectEvent() {

        };
        SelectEvent.value = new SelectEvent();
        return SelectEvent;
    })();
    var ResizeEvent = (function () {
        function ResizeEvent() {

        };
        ResizeEvent.value = new ResizeEvent();
        return ResizeEvent;
    })();
    var ScrollEvent = (function () {
        function ScrollEvent() {

        };
        ScrollEvent.value = new ScrollEvent();
        return ScrollEvent;
    })();
    var Event = function (eventTarget, preventDefault, stopPropagation) {
        this.eventTarget = eventTarget;
        this.preventDefault = preventDefault;
        this.stopPropagation = stopPropagation;
    };
    var UIEvent = function (__superclass_Data$dotDOM$dotSimple$dotEvents$dotEvent_0, detail, view) {
        this["__superclass_Data.DOM.Simple.Events.Event_0"] = __superclass_Data$dotDOM$dotSimple$dotEvents$dotEvent_0;
        this.detail = detail;
        this.view = view;
    };
    var UIEventTarget = function (addUIEventListener, removeUIEventListener) {
        this.addUIEventListener = addUIEventListener;
        this.removeUIEventListener = removeUIEventListener;
    };
    var uiEventTypeShow = new Prelude.Show(function (_512) {
        if (_512 instanceof LoadEvent) {
            return "load";
        };
        if (_512 instanceof UnloadEvent) {
            return "unload";
        };
        if (_512 instanceof AbortEvent) {
            return "abort";
        };
        if (_512 instanceof ErrorEvent) {
            return "error";
        };
        if (_512 instanceof SelectEvent) {
            return "select";
        };
        if (_512 instanceof ResizeEvent) {
            return "resize";
        };
        if (_512 instanceof ScrollEvent) {
            return "scroll";
        };
        throw new Error("Failed pattern match");
    });
    var uiEventTargetHTMLWindow = new UIEventTarget(function (__dict_UIEvent_313) {
        return function (typ) {
            return Data_DOM_Simple_Unsafe_Events.unsafeAddEventListener(Prelude.show(uiEventTypeShow)(typ));
        };
    }, function (__dict_UIEvent_314) {
        return function (typ) {
            return Data_DOM_Simple_Unsafe_Events.unsafeRemoveEventListener(Prelude.show(uiEventTypeShow)(typ));
        };
    });
    var eventDOMEvent = new Event(Data_DOM_Simple_Unsafe_Events.unsafeEventTarget, Data_DOM_Simple_Unsafe_Events.unsafePreventDefault, Data_DOM_Simple_Unsafe_Events.unsafeStopPropagation);
    var uiEventDOMEvent = new UIEvent(function () {
        return eventDOMEvent;
    }, Data_DOM_Simple_Unsafe_Events.unsafeEventNumberProp("detail"), Data_DOM_Simple_Unsafe_Events.unsafeEventView);
    var addUIEventListener = function (dict) {
        return dict.addUIEventListener;
    };
    return {
        LoadEvent: LoadEvent, 
        UnloadEvent: UnloadEvent, 
        AbortEvent: AbortEvent, 
        ErrorEvent: ErrorEvent, 
        SelectEvent: SelectEvent, 
        ResizeEvent: ResizeEvent, 
        ScrollEvent: ScrollEvent, 
        UIEventTarget: UIEventTarget, 
        UIEvent: UIEvent, 
        Event: Event, 
        addUIEventListener: addUIEventListener, 
        eventDOMEvent: eventDOMEvent, 
        uiEventTypeShow: uiEventTypeShow, 
        uiEventDOMEvent: uiEventDOMEvent, 
        uiEventTargetHTMLWindow: uiEventTargetHTMLWindow
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_332) {
        return function (_521) {
            if (_521 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_332)(Data_Maybe.Nothing.value);
            };
            if (_521 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_332["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_521.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_331) {
        return function (f) {
            return function (_520) {
                if (_520 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_331)(Data_Maybe.Nothing.value);
                };
                if (_520 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_331["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(f(_520.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_340) {
        return function (_517) {
            if (_517.length === 0) {
                return Prelude.pure(__dict_Applicative_340)([  ]);
            };
            if (_517.length >= 1) {
                var _766 = _517.slice(1);
                return Prelude["<*>"](__dict_Applicative_340["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_340["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_517[0]))(sequence(traversableArray)(__dict_Applicative_340)(_766));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_339) {
        return function (f) {
            return function (_516) {
                if (_516.length === 0) {
                    return Prelude.pure(__dict_Applicative_339)([  ]);
                };
                if (_516.length >= 1) {
                    var _770 = _516.slice(1);
                    return Prelude["<*>"](__dict_Applicative_339["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_339["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(f(_516[0])))(traverse(traversableArray)(__dict_Applicative_339)(f)(_770));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    return {
        Traversable: Traversable, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray, 
        traversableMaybe: traversableMaybe
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var IsForeign = function (read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    var readJSON = function (__dict_IsForeign_352) {
        return function (json) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_352));
        };
    };
    var readWith = function (__dict_IsForeign_353) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_353)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_354) {
        return function (__dict_Index_355) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_355)(value)(prop))(readWith(__dict_IsForeign_354)(Data_Foreign_Index.errorAt(__dict_Index_355)(prop)));
                };
            };
        };
    };
    var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
    var arrayIsForeign = function (__dict_IsForeign_359) {
        return new IsForeign(function (value) {
            var readElement = function (i) {
                return function (value_1) {
                    return readWith(__dict_IsForeign_359)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
                };
            };
            var readElements = function (arr) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
            };
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
        });
    };
    return {
        IsForeign: IsForeign, 
        readProp: readProp, 
        readWith: readWith, 
        readJSON: readJSON, 
        read: read, 
        stringIsForeign: stringIsForeign, 
        numberIsForeign: numberIsForeign, 
        arrayIsForeign: arrayIsForeign
    };
})();
var PS = PS || {};
PS.Data_Date = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Global = PS.Global;
    var Data_Function = PS.Data_Function;
    var Data_Enum = PS.Data_Enum;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Int = PS.Data_Int;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Time = PS.Data_Time;
    
  function nowEpochMilliseconds() {
    return Date.now();
  }
  ;
    return {
        nowEpochMilliseconds: nowEpochMilliseconds
    };
})();
var PS = PS || {};
PS.Graphics_Canvas = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function getCanvasElementByIdImpl(id, Just, Nothing) {
    return function() {
      var el = document.getElementById(id);
      if (el && el instanceof HTMLCanvasElement) {
        return Just(el);
      } else {
        return Nothing;
      }
    };
  };
    function getContext2D(c) {  return function() {    return c.getContext('2d');  };};
    function getCanvasWidth(canvas){  return function(){    return canvas.width;  };};;
    function getCanvasHeight(canvas){  return function(){    return canvas.height;  };};;
    function setCanvasWidth(width){   return function(canvas){      return function(){        canvas.width = width;        return canvas;      };    };};;
    function setCanvasHeight(height){   return function(canvas){      return function(){         canvas.height = height;         return canvas;       };    };};;
    function setFillStyle(style) {  return function(ctx) {    return function() {      ctx.fillStyle = style;      return ctx;    };  };};
    function beginPath(ctx) {  return function() {    ctx.beginPath();    return ctx;  };};
    function fill(ctx) {  return function() {    ctx.fill();    return ctx;  };};
    function clip(ctx) {  return function() {    ctx.clip();    return ctx;  };};
    function arc(ctx) {  return function(a) {    return function() {      ctx.arc(a.x, a.y, a.r, a.start, a.end);      return ctx;    };  };};
    function rect(ctx) {  return function(r) {    return function() {      ctx.rect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function clearRect(ctx) {  return function(r) {    return function() {      ctx.clearRect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function setFont(fontspec) {  return function(ctx) {    return function() {      ctx.font = fontspec;      return ctx;    };  };};
    function fillText(ctx) {  return function(text) {    return function(x) {      return function(y) {        return function() {          ctx.fillText(text, x, y);          return ctx;        };      };    };  };};
    function measureText(ctx) {  return function(text) {    return function() {      return ctx.measureText(text);    };  };};
    function save(ctx) {  return function() {    ctx.save();    return ctx;  };};
    function restore(ctx) {  return function() {    ctx.restore();    return ctx;  };};
    var setCanvasDimensions = function (d) {
        return function (ce) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(setCanvasHeight(d.height)(ce))(setCanvasWidth(d.width));
        };
    };
    var getCanvasElementById = function (elId) {
        return getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
    var getCanvasDimensions = function (ce) {
        return function __do() {
            var _49 = getCanvasWidth(ce)();
            var _48 = getCanvasHeight(ce)();
            return {
                width: _49, 
                height: _48
            };
        };
    };
    var fillPath = function (ctx) {
        return function (path) {
            return function __do() {
                beginPath(ctx)();
                var _51 = path();
                fill(ctx)();
                return _51;
            };
        };
    };
    return {
        restore: restore, 
        save: save, 
        measureText: measureText, 
        fillText: fillText, 
        setFont: setFont, 
        clearRect: clearRect, 
        rect: rect, 
        arc: arc, 
        fillPath: fillPath, 
        clip: clip, 
        fill: fill, 
        beginPath: beginPath, 
        setFillStyle: setFillStyle, 
        setCanvasDimensions: setCanvasDimensions, 
        getCanvasDimensions: getCanvasDimensions, 
        setCanvasHeight: setCanvasHeight, 
        getCanvasHeight: getCanvasHeight, 
        setCanvasWidth: setCanvasWidth, 
        getCanvasWidth: getCanvasWidth, 
        getContext2D: getContext2D, 
        getCanvasElementById: getCanvasElementById
    };
})();
var PS = PS || {};
PS.WebSocket = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function mkWebSocket(url) {
    return function() {
      return new WebSocket(url)
    }
  }
  ;
    
  function onMessageImpl(socket, callback) {
    return function() {
      socket.onmessage = function(msg) {
        callback(msg.data)()
      }
    }
  }
  ;
    var onMessage = function (socket) {
        return function (callback) {
            return onMessageImpl(socket, callback);
        };
    };
    return {
        onMessage: onMessage, 
        onMessageImpl: onMessageImpl, 
        mkWebSocket: mkWebSocket
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Control_Alt = PS.Control_Alt;
    var Graphics_Canvas = PS.Graphics_Canvas;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff_Ref = PS.Control_Monad_Eff_Ref;
    var Data_DOM_Simple_Window = PS.Data_DOM_Simple_Window;
    var Data_DOM_Simple_Element = PS.Data_DOM_Simple_Element;
    var Data_Traversable = PS.Data_Traversable;
    var Data_DOM_Simple_Document = PS.Data_DOM_Simple_Document;
    var Dims = PS.Dims;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Date = PS.Data_Date;
    var Data_Maybe = PS.Data_Maybe;
    var $$Math = PS.$$Math;
    var Data_String = PS.Data_String;
    var WebSocket = PS.WebSocket;
    var Data_DOM_Simple_Events = PS.Data_DOM_Simple_Events;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var DOM = PS.DOM;
    var Data_DOM_Simple_Types = PS.Data_DOM_Simple_Types;
    var Data_Time = PS.Data_Time;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    
  function documentUrl() {
    return document.URL;
  };
    var WsStop = (function () {
        function WsStop(value0) {
            this.value0 = value0;
        };
        WsStop.create = function (value0) {
            return new WsStop(value0);
        };
        return WsStop;
    })();
    var WsIndex = (function () {
        function WsIndex(value0) {
            this.value0 = value0;
        };
        WsIndex.create = function (value0) {
            return new WsIndex(value0);
        };
        return WsIndex;
    })();
    var WebChord = (function () {
        function WebChord(value0) {
            this.value0 = value0;
        };
        WebChord.create = function (value0) {
            return new WebChord(value0);
        };
        return WebChord;
    })();
    var WebSong = (function () {
        function WebSong(value0) {
            this.value0 = value0;
        };
        WebSong.create = function (value0) {
            return new WebSong(value0);
        };
        return WebSong;
    })();
    var WmSong = (function () {
        function WmSong(value0) {
            this.value0 = value0;
        };
        WmSong.create = function (value0) {
            return new WmSong(value0);
        };
        return WmSong;
    })();
    var WmIndex = (function () {
        function WmIndex(value0) {
            this.value0 = value0;
        };
        WmIndex.create = function (value0) {
            return new WmIndex(value0);
        };
        return WmIndex;
    })();
    var WmStop = (function () {
        function WmStop(value0) {
            this.value0 = value0;
        };
        WmStop.create = function (value0) {
            return new WmStop(value0);
        };
        return WmStop;
    })();
    var AniChord = (function () {
        function AniChord(value0) {
            this.value0 = value0;
        };
        AniChord.create = function (value0) {
            return new AniChord(value0);
        };
        return AniChord;
    })();
    var wsStopIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("wssId")(value))(function (_60) {
            return Prelude["return"](Data_Either.monadEither)(new WsStop({
                wssId: _60
            }));
        });
    });
    var wsIndexIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("wiIndex")(value))(function (_59) {
            return Prelude["return"](Data_Either.monadEither)(new WsIndex({
                wiIndex: _59
            }));
        });
    });
    var webChordIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("wcName")(value))(function (_54) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("wcDuration")(value))(function (_53) {
                return Prelude["return"](Data_Either.monadEither)(new WebChord({
                    wcName: _54, 
                    wcDuration: _53
                }));
            });
        });
    });
    var webSongIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("wsId")(value))(function (_58) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("wsName")(value))(function (_57) {
                return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.arrayIsForeign(webChordIsForeign))(Data_Foreign_Index.indexString)("wsChords")(value))(function (_56) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.numberIsForeign)(Data_Foreign_Index.indexString)("wsTempo")(value))(function (_55) {
                        return Prelude["return"](Data_Either.monadEither)(new WebSong({
                            wsId: _58, 
                            wsName: _57, 
                            wsChords: _56, 
                            wsTempo: _55
                        }));
                    });
                });
            });
        });
    });
    var webMessageIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
        return Control_Alt["<|>"](Data_Either.altEither)(Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(WmSong.create)(Data_Foreign_Class.read(webSongIsForeign)(value)))(Prelude["<$>"](Data_Either.functorEither)(WmIndex.create)(Data_Foreign_Class.read(wsIndexIsForeign)(value))))(Prelude["<$>"](Data_Either.functorEither)(WmStop.create)(Data_Foreign_Class.read(wsStopIsForeign)(value)));
    });
    var timeToChord = function (modnow) {
        return function (chordtime) {
            return function (duration) {
                var ct = Prelude["-"](Data_Time.ringMilliseconds)(chordtime)(modnow);
                var _782 = Prelude["<"](Data_Time.ordMilliseconds)(ct)(0);
                if (_782) {
                    return Prelude["+"](Data_Time.semiringMilliseconds)(ct)(duration);
                };
                if (!_782) {
                    return ct;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var tempoToBeatMs = function (tempo) {
        var _783 = tempo === 0;
        if (_783) {
            return 0;
        };
        if (!_783) {
            var minute = 1000 * 60;
            return minute / tempo;
        };
        throw new Error("Failed pattern match");
    };
    var sizeCanvas = function (canelt) {
        return function __do() {
            var _78 = Data_DOM_Simple_Window.innerWidth(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
            var _77 = Data_DOM_Simple_Window.innerHeight(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
            var _76 = Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
            var _75 = Data_DOM_Simple_Document.body(Data_DOM_Simple_Document.htmlDocument)(_76)();
            var _74 = Data_DOM_Simple_Element.getElementById(Data_DOM_Simple_Document.htmlDocumentElement)("main")(_76)();
            return (function () {
                if (_74 instanceof Data_Maybe.Just) {
                    return function __do() {
                        var _73 = Dims.getClientWidth(_74.value0)();
                        var _72 = Dims.getOffsetHeight(_75)();
                        var _71 = Graphics_Canvas.getCanvasDimensions(canelt)();
                        return (function () {
                            var canh = (_71.height + _77) - _72;
                            return function __do() {
                                Graphics_Canvas.setCanvasDimensions({
                                    height: canh, 
                                    width: _73
                                })(canelt)();
                                return Prelude.unit;
                            };
                        })()();
                    };
                };
                return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
            })()();
        };
    };
    var sizeCanvasEvt = function (canelt) {
        return function (_677) {
            return sizeCanvas(canelt);
        };
    };
    var msMod = function (_680) {
        return function (_681) {
            return _680 % _681;
        };
    };
    var maxChordWidth = function (con2d) {
        return function (chords) {
            return function __do() {
                var _88 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function (_675) {
                    return function __do() {
                        var _87 = Graphics_Canvas.measureText(con2d)(_675.value0.name)();
                        return _87.width;
                    };
                })(chords)();
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (a) {
                    return function (b) {
                        var _802 = a > b;
                        if (_802) {
                            return a;
                        };
                        if (!_802) {
                            return b;
                        };
                        throw new Error("Failed pattern match");
                    };
                })(0)(_88);
            };
        };
    };
    var makeAniChords = function (_678) {
        var beatms = tempoToBeatMs(_678.value0.wsTempo);
        var accum = function (_688) {
            return function (_689) {
                return new Data_Tuple.Tuple(Prelude["+"](Data_Time.semiringMilliseconds)(_688.value0)(Prelude["*"](Data_Time.semiringMilliseconds)(_689.value0.wcDuration)(beatms)), Data_Array.snoc(_688.value1)(new AniChord({
                    name: _689.value0.wcName, 
                    time: _688.value0
                })));
            };
        };
        return Data_Tuple.snd(Data_Foldable.foldl(Data_Foldable.foldableArray)(accum)(new Data_Tuple.Tuple(0, [  ]))(_678.value0.wsChords));
    };
    var drawChordGrid = function (con2d) {
        return function (x) {
            return function (y) {
                return function (xw) {
                    return function (yw) {
                        return function (maxchordwidth) {
                            return function (curchordidx) {
                                return function (acs) {
                                    var numperrow = $$Math.floor(xw / maxchordwidth);
                                    var hspace = xw / numperrow;
                                    var drawloc = function (hspace_1) {
                                        return function (rowheight) {
                                            return function (index) {
                                                var inum = index / numperrow;
                                                var row = $$Math.floor(inum);
                                                var col = (inum - row) * numperrow;
                                                return new Data_Tuple.Tuple(x + col * hspace_1, y + 20 + row * rowheight);
                                            };
                                        };
                                    };
                                    var dexes = Data_Array.range(0)(Data_Array.length(acs) - 1);
                                    var dexedacs = Data_Tuple.zip(dexes)(acs);
                                    var count = Data_Array.length(acs);
                                    var rows = $$Math.ceil(count / numperrow);
                                    var rowheight = yw / rows;
                                    return function __do() {
                                        Graphics_Canvas.clearRect(con2d)({
                                            x: x, 
                                            y: y, 
                                            w: xw, 
                                            h: yw
                                        })();
                                        Graphics_Canvas.setFillStyle("#000000")(con2d)();
                                        Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function (_676) {
                                            var toop = drawloc(hspace)(rowheight)(_676.value0);
                                            var _811 = _676.value0 === curchordidx;
                                            if (_811) {
                                                return function __do() {
                                                    Graphics_Canvas.setFillStyle("#FF0000")(con2d)();
                                                    Graphics_Canvas.fillText(con2d)(_676.value1.value0.name)(Data_Tuple.fst(toop))(Data_Tuple.snd(toop))();
                                                    return Graphics_Canvas.setFillStyle("#000000")(con2d)();
                                                };
                                            };
                                            if (!_811) {
                                                return Graphics_Canvas.fillText(con2d)(_676.value1.value0.name)(Data_Tuple.fst(toop))(Data_Tuple.snd(toop));
                                            };
                                            throw new Error("Failed pattern match");
                                        })(dexedacs)();
                                        return Prelude.unit;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var onChordDraw = function (canelt) {
        return function (curchordidx) {
            return function (acs) {
                return function __do() {
                    var _86 = Graphics_Canvas.getContext2D(canelt)();
                    var _85 = Graphics_Canvas.getCanvasDimensions(canelt)();
                    Graphics_Canvas.setFont("20px sans-serif")(_86)();
                    var mbcurchord = Data_Array["!!"](acs)(curchordidx);
                    var _84 = maxChordWidth(_86)(acs)();
                    Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Control_Monad_Eff.applicativeEff)(function (_674) {
                        return function __do() {
                            var _83 = Graphics_Canvas.measureText(_86)(_674.value0.name)();
                            Graphics_Canvas.clearRect(_86)({
                                x: 25, 
                                y: 5, 
                                w: _84, 
                                h: 25
                            })();
                            return Graphics_Canvas.fillText(_86)(_674.value0.name)(25)(25)();
                        };
                    })(mbcurchord)();
                    var cdh = _85.height * 0.5;
                    return drawChordGrid(_86)(0)(cdh)(_85.width)(cdh)(_84)(curchordidx)(acs)();
                };
            };
        };
    };
    var drawAniDots = function (con2d) {
        return function (_683) {
            return function (_684) {
                return function (_685) {
                    return function (_686) {
                        return function (_687) {
                            var twoPi = 2 * $$Math.pi;
                            var beatsofar = (_687 - _684) / _685;
                            var firstbeat = (beatsofar - $$Math.floor(beatsofar)) * _685;
                            var numbeats = $$Math.floor((_686 - firstbeat) / _685);
                            var dots = Data_Array.range(0)(numbeats);
                            var b2x = _683.w / _686;
                            var dotsms = Prelude["<$>"](Data_Array.functorArray)(function (i) {
                                return (_683.w - (i * _685 + firstbeat) * b2x) + _683.x;
                            })(dots);
                            return function __do() {
                                Graphics_Canvas.setFillStyle("#000000")(con2d)();
                                Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function (dtx) {
                                    var a = {
                                        x: dtx, 
                                        y: _683.y - 10, 
                                        r: 5, 
                                        start: 0, 
                                        end: twoPi
                                    };
                                    return function __do() {
                                        Graphics_Canvas.beginPath(con2d)();
                                        Graphics_Canvas.arc(con2d)(a)();
                                        return Graphics_Canvas.fill(con2d)();
                                    };
                                })(dotsms)();
                                return Prelude.unit;
                            };
                        };
                    };
                };
            };
        };
    };
    var drawAniChords = function (con2d) {
        return function (_682) {
            return function (now) {
                return function (window) {
                    return function (acs) {
                        var wholerect = {
                            h: _682.h, 
                            w: _682.w, 
                            x: _682.x, 
                            y: _682.y - _682.h
                        };
                        var toNumber = function (_672) {
                            return _672;
                        };
                        var nwindow = toNumber(window);
                        var xes = Prelude["<$>"](Data_Array.functorArray)(function (_671) {
                            return _682.x + _682.w * (toNumber(_671.value0) / nwindow);
                        })(acs);
                        return function __do() {
                            Graphics_Canvas.save(con2d)();
                            Graphics_Canvas.rect(con2d)(wholerect)();
                            Graphics_Canvas.clip(con2d)();
                            Graphics_Canvas.setFillStyle("#8080FF")(con2d)();
                            Graphics_Canvas.fillPath(con2d)(Graphics_Canvas.rect(con2d)(wholerect))();
                            Graphics_Canvas.setFillStyle("#000000")(con2d)();
                            Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function (_673) {
                                return Graphics_Canvas.fillText(con2d)(_673.value1.value1.value0.name)(_673.value0)(_682.y - 10);
                            })(Data_Tuple.zip(xes)(acs))();
                            Graphics_Canvas.restore(con2d)();
                            return Prelude.unit;
                        };
                    };
                };
            };
        };
    };
    var animate = function (canelt) {
        return function (songduration) {
            return function (begin) {
                return function (beatms) {
                    return function (windowms) {
                        return function (acs) {
                            return function __do() {
                                var _82 = Graphics_Canvas.getContext2D(canelt)();
                                var _81 = Data_Date.nowEpochMilliseconds();
                                return (function () {
                                    var modnow = msMod(Prelude["-"](Data_Time.ringMilliseconds)(_81)(begin))(songduration);
                                    var acnows = Prelude["<$>"](Data_Array.functorArray)(function (_669) {
                                        return new Data_Tuple.Tuple(timeToChord(modnow)(_669.value0.time)(songduration), new AniChord(_669.value0));
                                    })(acs);
                                    var drawAcs = Data_Array.filter(function (_670) {
                                        return Prelude["<"](Data_Time.ordMilliseconds)(_670.value0)(windowms);
                                    })(acnows);
                                    return function __do() {
                                        Graphics_Canvas.setFont("20px sans-serif")(_82)();
                                        var _80 = Graphics_Canvas.getCanvasDimensions(canelt)();
                                        return (function () {
                                            var dr = {
                                                x: 0, 
                                                y: 100, 
                                                w: _80.width, 
                                                h: 60
                                            };
                                            return function __do() {
                                                drawAniChords(_82)(dr)(modnow)(windowms)(drawAcs)();
                                                drawAniDots(_82)(dr)(begin)(beatms)(windowms)(_81)();
                                                return Prelude.unit;
                                            };
                                        })()();
                                    };
                                })()();
                            };
                        };
                    };
                };
            };
        };
    };
    var startAnimation = function (canelt) {
        return function (_679) {
            return function (chordindex) {
                return function __do() {
                    var _79 = Data_Date.nowEpochMilliseconds();
                    return (function () {
                        var beatms = tempoToBeatMs(_679.value0.wsTempo);
                        var songduration = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (sum) {
                            return function (_667) {
                                return Prelude["+"](Data_Time.semiringMilliseconds)(sum)(Prelude["*"](Data_Time.semiringMilliseconds)(_667.value0.wcDuration)(beatms));
                            };
                        })(0)(_679.value0.wsChords);
                        var anichords = makeAniChords(new WebSong(_679.value0));
                        var curchordtime = Data_Maybe.maybe(0)(function (_668) {
                            return _668.value0.time;
                        })(Data_Array["!!"](anichords)(chordindex));
                        return Data_DOM_Simple_Window.setInterval(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)(40)(animate(canelt)(songduration)(Prelude["-"](Data_Time.ringMilliseconds)(_79)(curchordtime))(beatms)(5000)(anichords));
                    })()();
                };
            };
        };
    };
    var enmessage = function (songref) {
        return function (timeoutref) {
            return function (canelt) {
                return function (msg) {
                    return function __do() {
                        var _70 = Graphics_Canvas.getContext2D(canelt)();
                        var _69 = Graphics_Canvas.getCanvasDimensions(canelt)();
                        return (function () {
                            var wholerect = {
                                h: _69.height, 
                                w: _69.width, 
                                x: 0, 
                                y: 0
                            };
                            var wm = Data_Foreign_Class.readJSON(webMessageIsForeign)(msg);
                            if (wm instanceof Data_Either.Right) {
                                if (wm.value0 instanceof WmSong) {
                                    return function __do() {
                                        Debug_Trace.trace("song")();
                                        Debug_Trace.trace(wm.value0.value0.value0.wsName)();
                                        Control_Monad_Eff_Ref.writeRef(songref)(new WebSong(wm.value0.value0.value0))();
                                        var _64 = Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
                                        var _63 = Data_DOM_Simple_Element.getElementById(Data_DOM_Simple_Document.htmlDocumentElement)("songname")(_64)();
                                        Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Control_Monad_Eff.applicativeEff)(Data_DOM_Simple_Element.setTextContent(Data_DOM_Simple_Element.htmlElement)(wm.value0.value0.value0.wsName))(_63)();
                                        var _62 = Control_Monad_Eff_Ref.readRef(timeoutref)();
                                        Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Control_Monad_Eff.applicativeEff)(Data_DOM_Simple_Window.clearTimeout(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow))(_62)();
                                        var _61 = startAnimation(canelt)(new WebSong(wm.value0.value0.value0))(0)();
                                        Control_Monad_Eff_Ref.writeRef(timeoutref)(new Data_Maybe.Just(_61))();
                                        return Prelude.unit;
                                    };
                                };
                                if (wm.value0 instanceof WmIndex) {
                                    return function __do() {
                                        var _67 = Control_Monad_Eff_Ref.readRef(songref)();
                                        var _66 = Control_Monad_Eff_Ref.readRef(timeoutref)();
                                        Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Control_Monad_Eff.applicativeEff)(Data_DOM_Simple_Window.clearTimeout(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow))(_66)();
                                        var _65 = startAnimation(canelt)(new WebSong(_67.value0))(wm.value0.value0.value0.wiIndex)();
                                        Control_Monad_Eff_Ref.writeRef(timeoutref)(new Data_Maybe.Just(_65))();
                                        var anichords = makeAniChords(new WebSong(_67.value0));
                                        onChordDraw(canelt)(wm.value0.value0.value0.wiIndex)(anichords)();
                                        return Prelude.unit;
                                    };
                                };
                                if (wm.value0 instanceof WmStop) {
                                    return function __do() {
                                        var _68 = Control_Monad_Eff_Ref.readRef(timeoutref)();
                                        Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Control_Monad_Eff.applicativeEff)(Data_DOM_Simple_Window.clearTimeout(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow))(_68)();
                                        return Prelude.unit;
                                    };
                                };
                                return Debug_Trace.trace("message pattern match failed");
                            };
                            if (wm instanceof Data_Either.Left) {
                                return Debug_Trace.trace("message read failed");
                            };
                            throw new Error("Failed pattern match");
                        })()();
                    };
                };
            };
        };
    };
    var enlode = function __do() {
        Debug_Trace.trace("enlode")();
        var _94 = Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)();
        var _93 = documentUrl();
        return (function () {
            var wsurl = Data_String.replace("https:")("wss:")(Data_String.replace("http:")("ws:")(_93));
            return function __do() {
                var _92 = WebSocket.mkWebSocket(wsurl)();
                var _91 = Graphics_Canvas.getCanvasElementById("canvas")();
                if (_91 instanceof Data_Maybe.Just) {
                    var _90 = Control_Monad_Eff_Ref.newRef(new WebSong({
                        wsId: 0, 
                        wsName: "", 
                        wsChords: [  ], 
                        wsTempo: 0
                    }))();
                    var _89 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
                    WebSocket.onMessage(_92)(enmessage(_90)(_89)(_91.value0))();
                    sizeCanvas(_91.value0)();
                    Data_DOM_Simple_Events.addUIEventListener(Data_DOM_Simple_Events.uiEventTargetHTMLWindow)(Data_DOM_Simple_Events.uiEventDOMEvent)(Data_DOM_Simple_Events.ResizeEvent.value)(sizeCanvasEvt(_91.value0))(Data_DOM_Simple_Window.globalWindow)();
                    Debug_Trace.trace("enlode end")();
                    return Prelude.unit;
                };
                throw new Error("Failed pattern match");
            };
        })()();
    };
    return {
        AniChord: AniChord, 
        WmSong: WmSong, 
        WmIndex: WmIndex, 
        WmStop: WmStop, 
        WsStop: WsStop, 
        WsIndex: WsIndex, 
        WebSong: WebSong, 
        WebChord: WebChord, 
        documentUrl: documentUrl, 
        enlode: enlode, 
        timeToChord: timeToChord, 
        drawChordGrid: drawChordGrid, 
        maxChordWidth: maxChordWidth, 
        onChordDraw: onChordDraw, 
        drawAniDots: drawAniDots, 
        drawAniChords: drawAniChords, 
        animate: animate, 
        msMod: msMod, 
        startAnimation: startAnimation, 
        makeAniChords: makeAniChords, 
        tempoToBeatMs: tempoToBeatMs, 
        sizeCanvas: sizeCanvas, 
        sizeCanvasEvt: sizeCanvasEvt, 
        enmessage: enmessage, 
        webChordIsForeign: webChordIsForeign, 
        webSongIsForeign: webSongIsForeign, 
        wsIndexIsForeign: wsIndexIsForeign, 
        wsStopIsForeign: wsStopIsForeign, 
        webMessageIsForeign: webMessageIsForeign
    };
})();
